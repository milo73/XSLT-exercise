<?xml version="1.0" encoding="UTF-8"?>
<routes>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="invoices-to-sharepoint" esbLocation="internal" synchronous="false" version="V1.2">
        <maven groupId="com.dtg.esb.sharepoint" artifactId="invoices-to-sharepoint" version="1.0.0"
            feature="true" configChanged="true"/>
        <description>
            <paragraph> CRM wants to print, and dispatch invoices for completed orders. CRM
                delegates the responsibility of producing invoices to the Exact accounting system.
                The Exact accounting system produces invoice 'blue prints' together with the
                necessary data to have an invoice delivered to the customer. The Print house picks
                up the invoice blue prints, and turns them into pdf documents. Using the data
                supplied with the blue prints the print house dispatches the pdf documents to the
                customers for which the invoices are intended. </paragraph>
            <paragraph> Besides to dispatching the invoices to customers the print house also sends
                back a copy of each invoice to DTG. DTG accesses these fed back invoices in a
                directory in which the print house places the copies. Note that the print house
                places the invoices of both the MBS, and the CRM in this directory. </paragraph>
            <paragraph> CRM uses SharePoint(tm) from Microsoft(r) to store its documents. CRM wants
                the invoices that belong to the orders administered in CRM, to be stored in
                SharePoint as well. The ESB picks up all invoices related to CRM orders from the
                directory in which MBS puts invoices it has rejected. By setting a file name mask
                the invoices to SharePoint route selects only those pdf documents that are invoices
                (and credit notes) intended for CRM. </paragraph>
            <paragraph> Only files matching the regular expression set in the configuration property
                are picked and processed by the route, the other files are left untouched in the
                source folder. </paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="none"/>
        </dependingRoutes>
        <history>
            <changes version="1.0.0">
                <change jira="DTGESB-3768">Finalize version</change>
            </changes>
            <changes version="1.0.0.RC2">
                <change jira="DTGESB-3664">Adapt regular expressions to deal with case sensitive pdf
                    extension more safely</change>
                <change jira="DTGESB-3741">Ensure a title is being set when uploading an invoice to
                    sharepoint</change>
            </changes>
            <changes version="1.0.0.RC1">
                <change jira="DTGESB-1961">Initial release: As a CRM user I want to see a copy of my
                    invoice in Sharepoint.</change>
            </changes>
        </history>
        <endpoints>
            <endpoint direction="from" archeType="file" subType="PDF"> </endpoint>
            <endpoint direction="to" archeType="webservice" subType="SOAP"/>
        </endpoints>
        <configuration>
            <properties id="routeConfig" fileReference="com.dtg.esb.invoices.to.sharepoint.cfg">
                <property constant="true" changed="false" secret="false"
                    key="invoices-to-sharepoint.trace" exampleValue="false"
                    description="When set to true detailed logging is enabled.">false</property>
                <property constant="false" changed="false" secret="false"
                    key="invoices-to-sharepoint.inboxDirectory" exampleValue="/tmp/sharepoint"
                    description="The path to the directory in which the uploadable PDF documents (e.g. invoices) are expected. N.B. The system user running the ESB must have read/write permissions on this folder"
                    >/var/lib/jboss/transport/printhuis/pdm-to-shp/source</property>
                <property constant="false" changed="false" secret="false"
                    key="invoices-to-sharepoint.archiveDirectory"
                    exampleValue="/tmp/sharepoint/archive/"
                    description="The directory in which successfully uploaded PDF document files will be placed. N.B. The system user running the ESB must have read/write permissions on this folder"
                    >/var/lib/jboss/transport/printhuis/pdm-to-shp/done</property>
                <property constant="true" changed="false" secret="false"
                    key="invoices-to-sharepoint.username" exampleValue="DTGLAN\SV_ESB_Sharepoint"
                    description="The user name that will be associated with the document stored in SharePoint. "
                    >DTGLANSV_ESB_Sharepoint</property>
                <property constant="true" changed="false" secret="false"
                    key="invoices-to-sharepoint.sourceSystem" exampleValue="Dynamics CRM"
                    description="The system from which the invoice originates.">Dynamics
                    CRM</property>
                <property constant="true" changed="false" secret="false"
                    key="invoices-to-sharepoint.fileLeafRef" exampleValue="dtg"
                    description="An identifier assigned to the uploaded document.">dtg</property>
                <property constant="true" changed="true" secret="false"
                    key="invoices-to-sharepoint.includeFileRegex"
                    exampleValue="(DTG_INV|DTG_CRD)_(\\d+)_(\\d+)\.pdf"
                    description="Regular expression serving as a mask for filenames to understand which files contain CRM invoices.There is a constrain that applies on this regEx. It needs three groups"
                    >(DTG_INV|DTG_CRD)_(\d+)_(\d+).pdf</property>
            </properties>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="true" changed="false" secret="false"
                    key="esb-common.sharepointAdUserName" exampleValue="SV_ESB_Sharepoint"
                    description="The user name with which to authenticate with sharePoint."
                    >SV_ESB_Sharepoint</property>
                <property constant="false" changed="false" secret="true"
                    key="esb-common.sharepointAdPassword" exampleValue="VpTXho5Z"
                    description="The password with which to authenticate with sharePoint."
                    >********</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.sharepointAdDomain" exampleValue="DTGLAN"
                    description="The domain of the sharePoint.">DTGLAN</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.sharepointUrl"
                    exampleValue="http://ams-sharep-02/dms/201212/_vti_bin/OfficialFile.asmx"
                    description="The URL of the sharepoint webservice"
                    >http://ams-sharep-02/dms/201212/_vti_bin/OfficialFile.asmx</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="         http://schema.detelefoongids.nl         http://schema.detelefoongids.nl/esb-config/V1.2/esb-route.xsd"
        id="whitelist-debtor-status-route" esbLocation="internal" synchronous="false" version="V1.2">
        <maven configChanged="false" feature="true" groupId="com.dtg.esb.debtorstatus"
            artifactId="debtor-status-route" version="6.1.0"/>
        <description>
            <paragraph>The debtor-status-route enables Credit Manager to provide debtor status to
                the Microsoft CRM Dynamics system. </paragraph>
            <paragraph>When a customer does not pay his bill to DTG, after a certain amount of time,
                their credit status will change in the Credit Manager system. This information is
                necessary in CRM (so that we don’t try to sell more stuff to them), thus it needs to
                be transferred there. Also when the customer finally does pay, the credit status
                will change back to normal, and this is also necessary to update in CRM. </paragraph>
            <paragraph>For this purpose Credit Manager exports two CSV files, to two separate
                locations. One is the Teleopen list, also known as the black list, which contains an
                overview of charges that are overdue, and which customers are liable for these
                charges. There can be several per customer. </paragraph>
            <paragraph>The other file Credit Manager exports is known as the white list. This one
                consists only of a list of customer ids which have now paid their debts in full, and
                thus will go back to normal credit status. </paragraph>
            <paragraph>The debtor-status-route consists of two routes, one that picks up the
                blacklist, and one that picks up the white list. Both routes parse the CSV file,
                create an XML from it, and deliver it to the ESB input queue, from which the message
                will be routed to the inputQueue of CRM. </paragraph>
            <paragraph>The debtor-status-route consists of two sub routes.There is a sub route for
                the 'black list', and one for the 'white list' data. Both routes are file based.
                That is, they expect their input to be stored in a file that is deposited in the
                'source' directory of the route. Next to the source directory each sub route
                requires three more directories to be present. So the debtor-status-route requires
                the following 4 directories to be present. </paragraph>
            <paragraph>- Source : The directory into which Credit Manager must place the CSV file
                for processing by the debtor-status-route </paragraph>
            <paragraph>- Work : The directory into which the debtor-status-route moves the input
                file before, and while processing. The debtor-status-route also places a lock file
                after having moved the file, which gets removed after having processed the file </paragraph>
            <paragraph>- Error : The processed file is placed in this directory when the input field
                could not be processed successfully </paragraph>
            <paragraph>- Done : The processed file is placed in this directory after it has been
                processed successfully </paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="esb-ws-endpoint" version="6.0.0"/>
        </dependingRoutes>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2661">Make use of new transaction mechanism.</change>. <change
                    jira="DTGESB-2624">Adjusted meta-data</change>
                <change jira="DTGESB-2356">Updated meta data for auto generation release
                    documentation.</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1807">As an OPS I don't want to have unnecessary routes, and
                    want to see the topics and mini routes gone. i.e Messages are now always posted
                    to the esbInputQueue.</change>
                <change jira="DTGESB-1335">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="1.0.2">
                <change jira="DTGCON-1627">UAT - whitelisting on T1 not operable</change>
                <change jira="DTGESB-1164">DTGCON-1290: UAT: CRM does not correctly import and
                    process "blacklisted" from Creditmanager to CRM</change>
                <change jira="DTGESB-1008">Implement meta data for ESB website.</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-8">FCRETCRM_F1 and FCRETCRM_F2: Teleopen / blacklist, whitelist
                    (standAlone)</change>
            </changes>
        </history>
        <notes>
            <note>This route includes both the blacklist information as the whitelist
                information.</note>
            <note> The configuration settings specified below first describe the blacklist
                configuration settings and only after that the whilelist configuration settings. The
                sequence in which the blacklist file and the whitelist file are processed is very
                important. First the blacklist file should be processed and only when this is
                completely finished the whitelist file can be processed. The order of this can be
                configured by setting the properties debtorStatusRoute.blackListCronString and
                debtorStatusRoute.whiteListCronString </note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="file" subType="csv">
                <associatedProperties>
                    <associatedProperty key="debtorStatusRoute.blackListPathToSourceDirectory"/>
                    <associatedProperty key="debtorStatusRoute.blackListCronString"/>
                    <associatedProperty key="debtorStatusRoute.blackListTrancheSize"/>
                    <associatedProperty key="debtorStatusRoute.blackListPathToWorkDirectory"/>
                    <associatedProperty key="debtorStatusRoute.blackListPathToDoneDirectory"/>
                    <associatedProperty key="debtorStatusRoute.blackListPathToErrorDirectory"/>
                    <associatedProperty key="debtorStatusRoute.blackList.trace"/>
                    <associatedProperty key="debtorStatusRoute.whiteListPathToSourceDirectory"/>
                    <associatedProperty key="debtorStatusRoute.whiteListCronString"/>
                    <associatedProperty key="debtorStatusRoute.whiteListTrancheSize"/>
                    <associatedProperty key="debtorStatusRoute.whiteListPathToWorkDirectory"/>
                    <associatedProperty key="debtorStatusRoute.whiteListPathToDoneDirectory"/>
                    <associatedProperty key="debtorStatusRoute.whiteListPathToErrorDirectory"/>
                    <associatedProperty key="debtorStatusRoute.whiteList.trace"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="jms" subType="queue">
                <schemas>
                    <schema version="V1.0" type="invoiceStatusSnapshot.xsd" validating="false"
                        >http://schema.detelefoongids.nl/domain/v1.0/invoiceStatusSnapshot.xsd</schema>
                    <schema version="V1.0" type="whiteListedDebtors.xsd" validating="false"
                        >http://schema.detelefoongids.nl/domain/v1.0/whiteListedDebtors.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.esbBrokerUrl"/>
                    <associatedProperty key="esb-common.esbInputQueue"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="true" changed="false" secret="false"
                    key="esb-common.esbInputQueue" exampleValue="jms:queue:esbInputQueue"
                    description="The queue which is the output for the messages which are then picked up by the esb-ws-endpoint."
                    >jms:queue:esbInputQueue</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://ams-mq-d01:61616"
                    description="The URL of the (Active)MQ broker"
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.debtor.status.cfg">
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListCronString" exampleValue="cron\=0+0+*+*+*+?"
                    description="The cron string for scheduling the polling of the black-list file. NOTE: It is of paramount importance that any white-list file is processed after the entire black-list file has been processed! You can do this by choosing cron strings for the black list, and white list route that guarantee that white list sub route is always launched after the black list sub route has processed the black list input file in its entirety. A gap of at least 10 minutes is recommended."
                    >cron=0+*/1+*+*+*+?</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListCronString" exampleValue="cron\=0+0+0+*+*+?"
                    description="The cron string for scheduling the polling of the white-list file"
                    >cron=0+*/1+*+*+*+?</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListTrancheSize" exampleValue="10"
                    description="Specifies the number of CSV records that will go in a single WhiteListedDebtors message"
                    >10</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListTrancheSize" exampleValue="10"
                    description="Specifies the number of CSV records that will go in a single DebtorStatusUpdate message"
                    >10</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListPathToSourceDirectory"
                    exampleValue="/tmp/credit-manager/black-list/source"
                    description="The directory from where the route will pick up the black-list files."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/blacklist/source</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListPathToWorkDirectory"
                    exampleValue="/tmp/credit-manager/black-list/work"
                    description="The directory where the route will keep black-list files during processing."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/blacklist/work</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListPathToDoneDirectory"
                    exampleValue="/tmp/credit-manager/black-list/done"
                    description="The directory where the route will move the black-list when processing has finished sucessfully."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/blacklist/done</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListPathToErrorDirectory"
                    exampleValue="/tmp/credit-manager/black-list/error"
                    description="The directory where the route will move  the black-list if the processing failed."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/blacklist/error</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListPathToSourceDirectory"
                    exampleValue="/tmp/credit-manager/white-list/source"
                    description="The directory from where the route will pick up the white-list files."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/whitelist/source</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListPathToWorkDirectory"
                    exampleValue="/tmp/credit-manager/white-list/work"
                    description="The directory where the route will keep white-list files during processing."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/whitelist/work</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListPathToDoneDirectory"
                    exampleValue="/tmp/credit-manager/white-list/done"
                    description="The directory where the route will move the white-list when processing has finished sucessfully."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/whitelist/done</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListPathToErrorDirectory"
                    exampleValue="/tmp/credit-manager/white-list/error"
                    description="The directory where the route will move  the white-list if the processing failed."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/whitelist/error</property>
                <property constant="true" changed="false" secret="false"
                    key="debtorStatusRoute.blackList.trace" exampleValue="true (default=false)"
                    description="When set to true tracing on the black-list route is enabled. Not specifying this parameter, or setting it to false disables tracing."
                    >false</property>
                <property constant="true" changed="false" secret="false"
                    key="debtorStatusRoute.whiteList.trace" exampleValue="true (default=false)"
                    description="When set to true tracing on the white-list route is enabled. Not specifying this parameter, or setting it to false disables tracing"
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://schema.detelefoongids.nl http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="esb-validation-facade" esbLocation="internal" synchronous="true" version="V1.2">
        <maven feature="true" configChanged="true" groupId="com.dtg.esb.webservice"
            artifactId="esb-validation-facade" version="6.4.0.RC2"/>
        <description>
            <paragraph>The esb-validation-facade (EVF) is an internal MCD component. The EVF is
                built as a collection of Apache Camel routes, where each route implements a specific
                validation. There are routes for the validation of telephone numbers, IBAN formatted
                bank account numbers, email addresses, (web) uniform resource locators, and names
                and addresses. </paragraph>
            <paragraph>A 'main' route is responsible for accepting 'request for validation' (RFV)
                messages, and producing request for validation response (RFVR) messages. An RFV
                message contains an 'std' element that contains the fragment to validate. The
                fragment in the RFV message is passed verbatim to the appropriate validation route.
                The validation response coming back from the sub routes is wrapped by the main route
                in an RFVR. </paragraph>
            <paragraph>For its correct operation the EVF relies on the esb-ws-endpoint (which is the
                principle entry point of the ESB) to tell which validation to perform on the
                incoming RFV message. Also the esb-ws-endpoint ensures that the RFV message
                validates against the RFV schema. </paragraph>
        </description>
        <!-- Image -->
        <routeImageURL>http://ams-build01:8081/esbdev/images/facade-flow-6.0.1.png</routeImageURL>
        <dependingRoutes>
            <esbRoute id="esb-ws-endpoint"/>
        </dependingRoutes>
        <history>
            <changes version="6.4.0.RC2">
                <change jira="DTGESB-3195">Perform loadtest on MCD on local MongoDB</change>
                <change jira="DTGESB-4093">Extend RFV on ssoIdentity in order to support various
                    context types on credentials</change>
                <change jira="DTGESB-4122">As a CRM user I want the address validations to be more
                    robust</change>
                <change jira="DTGESB-4127">Create unit test for concurrent load on RFV
                    trunk</change>
                <change jira="DTGESB-4151">Test finding : Web validation produces inconsistent
                    results under heavy load. (DTGESB-4150)</change>
                <change jira="DTGESB-4186">As a system that interacts with the MCD, I want a more
                    robust RFI to be executed.</change>
            </changes>
            <changes version="6.4.0.RC1">
                <change jira="DTGESB-3999">Enable SSO in MCD</change>
            </changes>
            <changes version="6.3.0">
                <change jira="DTGESB-3565">Std validation Telecom on Full</change>
                <change jira="DTGESB-3867">Test finding : CRM: Address validation is accepting wrong
                    combinations (DTGCONTST-1485)</change>
                <change jira="DTGESB-3868">Test finding : CRM: Premise code in requestForValidation
                    does not change (DTGCONTST-1568)</change>
                <change jira="DTGESB-3899">Migration finding: alternative niet gevuld bij switch van
                    business naar residential</change>
                <change jira="DTGESB-3908">Ensure aid's are generated on the fragments in the
                    RFV</change>
                <change jira="DTGESB-3559">Derive BIC code from IBAN bankaccount in std
                    validation</change>
                <change jira="DTGESB-3781">Incorrect derived types in telecom fragment</change>
                <change jira="DTGESB-3248">As a system I want to store multiple versions of a data
                    (document types) in the database</change>
                <change jira="DTGESB-3584">HI address validation now add house number addition and
                    residence name into one field.</change>
                <change jira="DTGESB-3527">Add account fragment to notification on update
                    messages</change>
            </changes>
            <changes version="6.2.0">
                <change jira="DTGESB-3459">Placement Hierarchy in original address validation is
                    repeated, if provided in the input message</change>
                <change jira="DTGESB-3457">Problem with NOU message on the CI environment</change>
                <change jira="DTGESB-3404">Ensure NOU messages from RFU are send in a separate
                    route</change>
                <change jira="DTGESB-2842">RFV-std-address validatie aanpassen zodat
                    placementHierarchy gevuld wordt</change>
                <change jira="DTGESB-2839">Implemented new outlet 2.4 in MCD</change>
                <change jira="DTGESB-2857">Implement new std in validation facade</change>
                <change jira="DTGESB-2866">Update std for telephone number</change>
                <change jira="DTGESB-2865">Update std for email</change>
                <change jira="DTGESB-2864">Update std for web</change>
                <change jira="DTGESB-2863">Update std for iban</change>
                <change jira="DTGESB-2862">Update std for name, and address</change>
                <change jira="DTGESB-3247">As a CRM or MBS user I want to treat the business name
                    validation different.</change>
            </changes>
            <changes version="6.1.0">
                <change jira="DTGESB-3162">Verify if removal of context type in telecom validation
                    is correct</change>
                <change jira="DTGESB-3162">Enrich/adapt fragment in request, instead of replacing it
                    entirely with the validation result.</change>
                <change jira="DTGESB-3178">Derived type section was created incorrectly in the
                    telecom validation response.</change>
                <change jira="DTGESB-3127">RFUR contains wrong document version in meta
                    data</change>
                <change jira="DTGESB-2935">Refactor WebErrorMessageType so it becomes
                    dynamic</change>
                <change jira="DTGESB-3114">Avoid class cast problem in MCD in case of old
                    data</change>
                <change jira="DTGESB-2937">Increase robustness of in-flight messages for sync
                    routes.</change>
                <change jira="DTGESB-2905">Create release candidate.</change>
                <change jira="DTGESB-2324">Changed version to avoid confusion about which artifact
                    is used - standalone esb-validation-facade vs esb-validation-facade used in the
                    fuse-mcd project.</change>
                <change jira="DTGESB-2752">Refactor validation to only accept fragments.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2309">Upgraded to root pom 6.0.0.RC1 and implemented
                    user-story: As external system user I want to validate my email address or web
                    url.</change>
            </changes>
        </history>
        <notes>
            <note>The property esb-common.restValidationPort can be removed from the shared
                configuration file.</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="direct-vm" subType="direct-vm">
                <schemas>
                    <schema version="V2.4" type="RFV.xsd" validating="false"
                        >http://schema.detelefoongids.nl/message/v2.4/RFV.xsd</schema>
                    <schema version="V3.0" type="RFV.xsd" validating="false"
                        >http://schema.detelefoongids.nl/message/v3.0/RFV.xsd</schema>
                </schemas>
                <associatedProperties/>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="true" changed="false" secret="false"
                    key="esb-common.docModelXmlAllowedDocuments"
                    exampleValue="/META-INF/docmodel/xml/allowedDocuments.xml"
                    description="Reference to the allowed document file supported by the MCD. The content of this file lists all document types and the related versions supported by the MCD. When left blank a default file will be loaded that contains the document types that are currently known as supported. When specifying an external resource such as a file or an URL, the protocol should be mentioned as well. e.g. file://$FUSE_HOME/etc/docmodel/allowedDocuments.xml"/>
                <property constant="true" changed="true" secret="false"
                    key="esb-common.docModelXsdAllowedDocuments"
                    exampleValue="http://schema.detelefoongids.nl/esb-config/V2.0/allowedDocuments.xsd"
                    description="The url to the schema definition of the allowed documents as configured by the property docModelXmlAllowedDocuments"/>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.docModelXmlAllowedMessages"
                    exampleValue="/META-INF/docmodel/xml/allowedMessages.xml"
                    description="Reference to the allowed messages file supported by the MCD. The content of this files lists all the requests that are supported by MCD. Example given: RequestForInformation V2.4 with document type outlet. When left blank a default file will be loaded that contains the messages that are currently known as supported. When specifying an external resource such as a file or an URL, the protocol should be mentioned as well. e.g. file://$FUSE_HOME/etc/docmodel/allowedMcdMessages.xml"/>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.docModelXsdAllowedMessages"
                    exampleValue="http://schema.detelefoongids.nl/esb-config/V1.0/allowedMcdMessages.xsd"
                    description="The url to the schema definition of the allowed messages as configured by the property docModelXmlAllowedMessages"/>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.docModelXslBasePath" exampleValue="/META-INF/docmodel/xsl"
                    description="For multi version and multi document support several xslt have been written in order to up- or downgrade a specific document to the required version. When the default xslts are used for this, this property tells where the default xslts are located. When left blank the default value, /META-INF/docmodel/xsl, will be used."/>
                <property constant="true" changed="false" secret="true" key="esb-common.hashSalt"
                    exampleValue="salt"
                    description="In cryptography, a salt is random data that is used as an additional input to a one-way function that hashes a password or passphrase."
                    >********</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.validation.facade.cfg">
                <property constant="true" changed="false" secret="false"
                    key="validation-facade.trace" exampleValue="false"
                    description="When set to true, low grained information about the exchange processed by this route, will be logged into the log files. To avoid explosive growth of these log files this property should normally be set to false. When this property is not set, tracing will default to false. Less verbose logging can also be enabled by setting the log level to DEBUG in karaf."
                    >false</property>
                <property constant="true" changed="false" secret="false"
                    key="validation-facade.emailValidationPlan"
                    exampleValue="resource:///refDbStdEmailWeb.xml"
                    description="reference to the XML file with the email(web) plan. You can either use a file url, or a resource url, e.g. file:///var/fuse/stdRefDbMailWeb.xml, resource:///stdRefDbMailWeb.xml"
                    >resource:///refDbStdEmailWeb.xml</property>
                <property constant="true" changed="false" secret="false"
                    key="validation-facade.urlValidationPlan"
                    exampleValue="resource:///refDbStdEmailWeb.xml"
                    description="reference to the XML file with the (email) web plan. You can either use a file url, or a resource url, e.g. file:///var/fuse/stdRefDbMailWeb.xml, resource:///stdRefDbMailWeb.xml"
                    >resource:///refDbStdEmailWeb.xml</property>
                <property constant="true" changed="false" secret="false"
                    key="validation-facade.bankaccountValidationPlan"
                    exampleValue="/refDbStdBankaccount.xml"
                    description="reference to the XML file with the bank account plan. You can either use a file url, or a resource url, e.g. file:///var/fuse/stdRefDbBankaccount.xml, /stdRefDbBankaccount.xml"
                    >/refDbStdBankaccount.xml</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="             http://schema.detelefoongids.nl             http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="direct-debit-mandates-aggregate" esbLocation="internal" synchronous="false"
        version="V1.2">
        <maven groupId="com.dtg.esb.debit.mandate" artifactId="direct-debit-mandates-aggregate"
            version="1.0.0" feature="true" configChanged="false"/>
        <description>
            <paragraph> The Exact billing system is currently not capable of handling event based
                notification on update messages for direct debit mandates. It can only process this
                is information using a batch, where the batch can process only one file at the time. </paragraph>
            <paragraph> The ESB will collect all updates on direct-debit-mandates, received from
                CRM, and periodically aggregate the collected direct debit mandate updates into one
                big notificationOnUpdate message, so that this message can be processed by the Exact
                billing system. This route and the direct-debit-mandates-persist route facilitate
                this functionality. </paragraph>
            <paragraph> This route it triggered by a scheduler. When activated it will make a
                snapshot of the directory where the direct debit mandate files have been persisted
                by the direct-debit-mandates-persist-route. It will sort them on the file name,
                which contains a detailed timestamp. It will aggregate all files from the snapshot
                and wrap them in a notificationOnUpdate message. When this is done, all files
                processed will be moved to the done folder, which will be a subfolder of the folder
                configured by the property: esb-common.directDebitDirectory </paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="direct-debit-mandates-persist"/>
        </dependingRoutes>
        <history>
            <changes version="1.0.0">
                <change jira="DTGESB-4435">Finalize directDebitMandate artifacts</change>
            </changes>
            <changes version="1.0.0.RC2">
                <change jira="DTGESB-4240">Test finding: Aggregated direct-debit-mandate file should
                    have a file name representing the time it was created. (DTGESB-4239)</change>
            </changes>
            <changes version="1.0.0.RC1">
                <change jira="DTGESB-3660">Collect notificationOnUpdate for direct debit mandates
                    and aggregate.</change>
            </changes>
        </history>
        <endpoints>
            <endpoint direction="from" archeType="file" subType="XML">
                <associatedProperties>
                    <associatedProperty key="directDebitMandateAggregate.cronSchedule"/>
                    <associatedProperty key="esb-common.directDebitDirectory"/>
                    <associatedProperty key="esb-common.directDebitMandateEncoding"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="file" subType="XML">
                <schemas>
                    <schema version="V3.0" type="NOU.xsd" validating="false"
                        >http://schema.detelefoongids.nl/message/v3.0/NOU.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty
                        key="directDebitMandateAggregate.directDebitAggregateDirectory"/>
                    <associatedProperty key="directDebitMandateAggregate.sourceForNouMessage"/>
                    <associatedProperty key="directDebitMandateAggregate.versionForNouMessage"/>
                    <associatedProperty key="esb-common.directDebitMandateEncoding"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="routeConfig"
                fileReference="com.dtg.esb.direct.debit.mandate.aggregate.cfg">
                <property changed="false" constant="false" secret="false"
                    key="directDebitMandateAggregate.cronSchedule" exampleValue="0 1/2 * * * ? *"
                    description="To trigger this route every 2 minutes starting on the odd number 1"
                    >0 0 0/1 1/1 * ? *</property>
                <property changed="false" constant="false" secret="false"
                    key="directDebitMandateAggregate.directDebitAggregateDirectory"
                    exampleValue="/tmp/directDebitMandateAggregated"
                    description="The directory to store the aggregate notificationOnUpdate message in."
                    >var/lib/jboss/transport/exact/crm-to-exact/debit/aggregate</property>
                <property changed="false" constant="true" secret="false"
                    key="directDebitMandateAggregate.sourceForNouMessage" exampleValue="msDynCrm"
                    description="The value used for the source attribute in the notification root element."
                    >msDynCrm</property>
                <property changed="false" constant="true" secret="false"
                    key="directDebitMandateAggregate.versionForNouMessage" exampleValue="V3.0"
                    description="The value used for the version attribute in the notification root element. This value currently should be V3.0 "
                    >V3.0</property>
                <property changed="false" constant="true" secret="false"
                    key="directDebitMandateAggregate.trace" exampleValue="false"
                    description="When set to true detailed logging is enabled.">false</property>
            </properties>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property changed="false" constant="false" secret="false"
                    key="esb-common.directDebitDirectory"
                    exampleValue="/tmp/directDebitMandateParts"
                    description="The directory to store the fragments in. Note that this property does not have the file prefix."
                    >/var/lib/jboss/transport/exact/crm-to-exact/debit/source</property>
                <property changed="false" constant="true" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://activeMQ:61616"
                    description="The activeMQ broker used."
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property changed="false" constant="true" secret="false"
                    key="esb-common.directDebitMandateEncoding" exampleValue="UTF-8"
                    description="The encoding to use when writing the files. If not configured it will default to UTF-8"
                    >UTF-8</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="composer-producer-ctp" esbLocation="internal" synchronous="false" version="V1.2">
        <maven configChanged="false" groupId="com.dtg.esb.composer"
            artifactId="composer-producer-ctp" version="6.2.0" feature="true"/>
        <description>
            <paragraph> When a specific order in CRM is fulfilled and the actual exposures within
                this order are ready to be published, the CRM system issues several messages, with
                some of them containing an installBase element. </paragraph>
            <paragraph> It checks first if the installBase contains one or more outlet ids, and in
                that case it will fetch the outlet data associated with this id from Master Content
                Database (MCD). It then creates a composition message, that consists of the original
                installBase and the fetched outlet. If there was no outletId, the composition will
                only consist of the installBase. </paragraph>
            <paragraph> The composer-producer picks up CTP messages from a dedicated queue. This
                queue is filled by the esb-ws-endpoint that routes CTP message to the queue in front
                of the CTP route. </paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="esb-ws-endpoint" version=""/>
            <esbRoute id="util-ws-endpoint"/>
            <esbRoute id="ivp-ws-endpoint"/>
            <esbRoute id="universal-listing-ws-endpoint"/>
        </dependingRoutes>
        <history>
            <changes version="6.2.0">
                <change jira="DTGESB-3768">Finalize version</change>
            </changes>
            <changes version="6.2.0.RC1">
                <change jira="DTGESB-2938">new versions of CTP and CTF message.</change>
                <change>This release is related to the Cairo release.</change>
            </changes>
            <changes version="6.1.0.RC1">
                <change jira="DTGESB-2905">Create release candidate. Brussel</change>
                <change jira="DTGESB-2590">Use esb-common.mcdRfiEndpoint property instead of
                    esb-common.mcdRfiEndpoint</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2619">Adjusted meta-data</change>
                <change jira="DTGESB-2331">Changed mcd property to esb-common.mcdEndpoint</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0.</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1956">As CRM user I want to publish my SEA products (repair
                    composer)</change>
                <change jira="DTGESB-1731">As an OPS I don't want to have unnecessary routes, and
                    want to see the topics and mini routes gone.</change>
                <change jira="DTGESB-1327">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="1.2.0-RC1">
                <change jira="DTGESB-1190">Make composer producer CTP route transactional.</change>
                <change jira="DTGESB-1191">Adjust main message distributor to send CTF and CTP
                    installBase messages to their separate queues.</change>
                <change jira="DTGESB-1192">Composer Producer CTP should read from the CTP input
                    queue.</change>
            </changes>
            <changes version="1.1.0-RC1">
                <change jira="DTGESB-756">The RFI request will now use version 2.1 in order to make
                    use of outlet.xsd V2.1. </change>
            </changes>
            <changes version="1.0.0-RC5">
                <change jira="DTGESB-632">Do not call the MCD anymore, when there is no outlet
                    information in the installbase message.</change>
            </changes>
            <changes version="1.0.0-RC1">
                <change>Initial version</change>
            </changes>
        </history>
        <endpoints>
            <endpoint direction="from" archeType="queue" subType="XML">
                <schemas>
                    <schema version="V3.4" type="CTP" validating="true"
                        >http://schema.detelefoongids.nl/message/V3.4/CTP.xsd</schema>
                    <schema version="V2.4" type="RFI" validating="false"
                        >http://schema.detelefoongids.nl/message/V2.4/RFI.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.ctpInstallBaseQueue"/>
                    <associatedProperty key="esb-common.mcdRfiEndpoint"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="queue" subType="XML">
                <schemas>
                    <schema version="V3.4" type="CTP" validating="true"
                        >http://schema.detelefoongids.nl/message/V3.4/CTP.xsd</schema>
                    <schema version="V2.4" type="RFIR" validating="false"
                        >http://schema.detelefoongids.nl/response/V2.4/RFIR.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.esbInputQueue"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://ams-mq-d01:61616"
                    description="The URL of the ActiveMQ broker"
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false" key="esb-common.deadLetter"
                    exampleValue="jms:queue:esbDeadLetterQueue"
                    description="his property defines the default deadLetter queue"
                    >jms:queue:esbDeadLetterQueue</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.ctpInstallBaseQueue"
                    exampleValue="jms:queue:ctpInstallBaseQueue"
                    description="The startpoint URL of the queue which the route use as its starting endpoint"
                    >jms:queue:ctpInstallBaseQueue</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.mcdRfiEndpoint" exampleValue="netty:tcp://dtgdmcdcrm03:9999"
                    description="The endpoint URL specifying the machine, and port on which the MCD listens. The reader is referred to other parts of this document to understand what the value of this property should be."
                    >netty:tcp://dtgdmcdcrm01.dtglan.local:9997</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.esbInputQueue" exampleValue="jms:queue:esbInputQueue"
                    description="The end endpoint URL of the queue which the route use as its delivery endpoint. The esb-ws-endpoint will consume these messages and route them based on the content of the message."
                    >jms:queue:esbInputQueue</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.composer.producer.ctp.cfg">
                <property constant="true" changed="false" secret="false"
                    key="composerProducerCtf.trace" exampleValue="false"
                    description="When set to true, low grained information about the exchange processed by this route, will be logged into the log files. To avoid explosive growth of these log files this property should normally be set to false. When this property is not set, tracing will default to false. Less verbose logging can also be enabled by setting the log level to DEBUG in Karaf."
                />
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="             http://schema.detelefoongids.nl             http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="exact-invoices-to-esb-input-queue" esbLocation="internal" synchronous="false"
        version="V1.2">
        <maven configChanged="false" groupId="com.dtg.esb.exact"
            artifactId="exact-invoices-to-esb-input-queue" version="6.2.0" feature="true"/>
        <description>
            <paragraph> This route is used to inform CRM about the invoices that have been generated
                by Exact. This artifact is responsible for generating statusUpdateBilling messages
                based on an Exact invoices file and to distribute them to the esbInputQueue. Another
                artifact will pick up these messages and will deliver it to the input queue that
                will push them to the CRM webservice. </paragraph>
            <paragraph> When an invoice-run is performed within Exact, a CSV file is generated
                containing all invoices of that invoice-run. One invoice consists out of the
                following invoice lines in the CSV file. The first line is a K1 header line
                containing debtor information. The second line, identified by K2, contains
                information about the actual invoice. The last line, identified by V2, contains
                totals and VAT information. Before the last line one or more specification lines can
                be listed. These lines are identified by any of the following : </paragraph>
            <paragraph> Sg for group information </paragraph>
            <paragraph> Sp for product information </paragraph>
            <paragraph> Sd for discount information </paragraph>
            <paragraph> Sf for setup fee information </paragraph>
            <paragraph> Ss for comments </paragraph>
            <paragraph> Si for invoice period information </paragraph>
            <paragraph> Sr for refund information </paragraph>
            <paragraph> Sc for compensation information </paragraph>
            <paragraph> Se for element information </paragraph>
            <paragraph> This route picks up the CSV file at a configurable point in time and
                generates a statusUpdateBilling message per invoice. When the file is being
                processed it is moved to a work/in progress folder. This will avoid the file being
                picked up twice. When a complete set of invoice lines is found, existing out of a
                K1, K2, Sx and V2 lines, a statusUpdateBilling XML is created. The CSV does not
                contain information about the Financial Administration Id, but this ID is required
                in the statusUpdateBilling XML file. Therefor this value, 20, is added in this
                route. This XML message is send to the esb-common.esbInputQueue (queue), where it
                can be consumed by interested parties. </paragraph>
            <paragraph> When the format of a set of CSV invoice records does not meet the expected
                format, the CSV invoice records are logged into the configured Error folder. </paragraph>
            <paragraph> When it is not possible to map a set of CSV invoice records into a valid
                statusUpdateBilling message, this message is put on the deadLetter queue.
            </paragraph>
        </description>
        <history>
            <changes version="6.2.0">
                <change jira="DTGESB-3965">As for financial maintenance I want to see all rejected
                    invoices</change>
            </changes>
            <changes version="6.1.0">
                <change jira="DTGESB-2905">Create release candidate.</change>
                <change jira="DTGESB-2848">Update route to support version 2.4 of the
                    statusUpdateBilling message. Also the product and setup fee specification lines
                    do now support the pricing information to be optional.</change>
            </changes>
            <changes version="6.0.1">
                <change jira="DTGESB-2711">Make use of new transaction mechanism.</change>
                <change jira="DTGCONTST-234">Changed 'AcceptGiro' into 'Acceptgiro' because
                    factuur.csv produced by Exact contains 'Acceptgiro', and not
                    'AcceptGiro'</change>
                <change jira="DTGESB-2650">Reopened because: There was a separate money type pattern
                    for discounts, which I did not know of. I did only change the CSV_MONEY. That is
                    why the discount amounts of .50, and -.50 were still not accepted.</change>
                <change jira="DTGESB-2650">EXACT: VCD: Negative Discount Value below 1 Euro is
                    printed in "factuur.csv" without a preceding "zero"; results in
                    "rejected-invoices"</change>
                <change jira="DTGESB-2645">Investigate exact-invoices-to-esb route for defect on
                    missing comma</change>
                <change jira="DTGESB-2646">Investigate exact-invoices-to-esb route for defect on
                    mismatch of Giro/AcceptGiro.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2620">Adjusted meta-data</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
                <change jira="DTGESB-2159">Updated to status update billing version 2.3</change>
                <change jira="DTGESB-2573">Payment methods 4 and Incasso will become directDebit.
                    Payment method 5 and Giro will become paymentSlip.Digital Invoice 0 and empty
                    will become regularMail. Digital Invoice 1 will become eMail. </change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-1758">Now the route delivers invoice messages on the esb input
                    queue</change>
            </changes>
            <changes version="exact-invoices-to-topic 2.0.1">
                <change jira="DTGESB-1758">Now the route delivers invoice messages on the esb input
                    queue</change>
            </changes>
            <changes version="exact-invoices-to-topic 2.0.0">
                <change jira="DTGESB-1013">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="exact-invoices-to-topic 1.0.0">
                <change jira="DTGESB-51">As the ESB system I will retrieve the specified CSV file
                    created by Exact containing multiple invoices and send each individual invoice
                    in the required format to the CRM.</change>
            </changes>
        </history>
        <notes>
            <note>Route specific configuration file : com.dtg.esb.exact.invoices.cfg</note>
            <note>For information about the configuration options of the quartz scheduler, see:
                http://quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="file" subType="CSV">
                <associatedProperties>
                    <associatedProperty key="exactInvoices.schedulerEndpoint"/>
                    <associatedProperty key="exactInvoices.csvFileName"/>
                    <associatedProperty key="exactInvoices.pathToSourceDirectory"/>
                    <associatedProperty key="exactInvoices.pathToWorkDirectory"/>
                    <associatedProperty key="exactInvoices.pathToDoneDirectory"/>
                    <associatedProperty key="exactInvoices.pathToErrorDirectory"/>
                    <associatedProperty key="exactInvoices.defaultLedgerAccount"/>
                    <associatedProperty key="exactInvoices.trace"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="queue" subType="JMS">
                <schemas>
                    <schema version="V2.4" type="SUB" validating="false"
                        >http://schema.detelefoongids.nl/message/V2.4/SUB.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.esbBrokerUrl"/>
                    <associatedProperty key="esb-common.esbInputQueue"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://localhost:61616"
                    description="ESB broker url">tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.esbInputQueue" exampleValue="jms:queue:esbInputQueue"
                    description="Queue on which all ESB clients posts asynchronous messages."
                    >jms:queue:esbInputQueue</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.exact.invoices.cfg">
                <property constant="false" changed="false" secret="false"
                    key="exactInvoices.schedulerEndpoint"
                    exampleValue="quartz://exactInvoicesCrmRouteBuilder?cron\=0+*/1+*+*+*+?"
                    description="This property defines a schedule String for the route. The schedule String contains a reference to the camel component quartz, a name to identify the route and a scheduling CRON expression. For more information on Quartz schedule strings you are referred to: http://quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger"
                    >quartz://exactInvoicesCrmRouteBuilder?cron=0+*/1+*+*+*+?</property>
                <property constant="true" changed="false" secret="false"
                    key="exactInvoices.csvFileName" exampleValue="factuur.csv"
                    description="This property specifies the name of the input csv file from Exact."
                    >factuur.csv</property>
                <property constant="false" changed="false" secret="false"
                    key="exactInvoices.pathToSourceDirectory"
                    exampleValue="/tmp/exact-invoices/source"
                    description="This property specifies the path to the csv file of Exact."
                    >/var/lib/jboss/transport/exact/exact-to-crm/billing/source</property>
                <property constant="false" changed="false" secret="false"
                    key="exactInvoices.pathToWorkDirectory" exampleValue="/tmp/exact-invoices/work"
                    description="This property specifies the path to the Work directory where the file will be during processing."
                    >/var/lib/jboss/transport/exact/exact-to-crm/billing/work</property>
                <property constant="false" changed="false" secret="false"
                    key="exactInvoices.pathToDoneDirectory" exampleValue="/tmp/exact-invoices/done"
                    description="This property specifies the path to the Done directory where the file will be moved to after successful processing."
                    >/var/lib/jboss/transport/exact/exact-to-crm/billing/done</property>
                <property constant="false" changed="false" secret="false"
                    key="exactInvoices.pathToErrorDirectory"
                    exampleValue="/tmp/exact-invoices/error"
                    description="This property specifies the path to the Error directory where the file will be moved to after unsuccessful processing. This is also the directory in which the text file will be placed containing the report on rejected invoices."
                    >/var/lib/jboss/transport/exact/exact-to-crm/billing/error</property>
                <property constant="true" changed="false" secret="false"
                    key="exactInvoices.defaultLedgerAccount" exampleValue="89999"
                    description="This property specifies the default ledger account to be used when no ledger account information is set on the specification lines."
                    >89999</property>
                <property constant="true" changed="false" secret="false" key="exactInvoices.trace"
                    exampleValue="false"
                    description="When set to true, low grained information about the exchange processed by this route, will be logged into the log files. To avoid explosive growth of these log files this property should normally be set to false. When this property is not set, tracing will default to false. Less verbose logging can also be enabled by setting the log level to DEBUG in karaf."
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="             http://schema.detelefoongids.nl             http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="mono-rs-endpoint" esbLocation="internal" synchronous="false" version="V1.2">
        <maven groupId="com.dtg.esb.mono" artifactId="mono-rs-endpoint" version="1.0.0"
            feature="true" configChanged="false"/>
        <description>
            <paragraph> The mono platform is used by Fulfillment employees (Campaign Creators) to
                create website products. </paragraph>
            <paragraph> The route will accept an RFF message and reroute it based on the content to
                either create a MONO account or create a MONO site and subscription. </paragraph>
            <paragraph> If an RFF account is received, the route checks if the customer already has
                a MONO account, and if not it will create it. If the MONO account is already
                provided in the RFF, the route will simply update the data of this account in MONO. </paragraph>
            <paragraph> If an RFF installBase is received, the route checks if the username provided
                is validated and if the requested subdomain is available in MONO. After these
                preliminary checks, a site is created in MONO, together with a subscription.
                Finally, the global data or the site are based on the content of the outlet provided
                in the installBase. </paragraph>
        </description>
        <history>
            <changes version="1.0.0">
                <change jira="DTGESB-3981">Test finding: Mono : setGlobalData is not setting house
                    number and addition in street. (TSTDTGCONTST-168)</change>
                <change jira="DTGESB-3927">Test finding: CRM: receives an error on createAccount but
                    expects a mono id (TSTDTGCONTST-166)</change>
                <change jira="DTGESB-3928">Test finding: CRM: expects update of global data
                    (TSTDTGCONTST-165)</change>
                <change jira="DTGESB-3866">Adjust mono configuration api call so the right account
                    id is passed along</change>
                <change jira="DTGESB-3836">Adjust meta data for the mono route so that properties
                    are shown</change>
                <change jira="DTGESB-3319">Mono - Create account</change>
                <change jira="DTGESB-3320">Mono - Create site</change>
            </changes>
        </history>
        <endpoints>
            <endpoint direction="from" archeType="camel" subType="tcp">
                <schemas>
                    <schema version="V1.0" type="RFF.xsd" validating="false"
                        >http://schema.detelefoongids.nl/message/V1.0/RFF.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.monoRffEndpoint"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="rest" subType="post">
                <associatedProperties>
                    <associatedProperty key="mono.endPoint"/>
                    <associatedProperty key="mono.userToken"/>
                    <associatedProperty key="mono.test"/>
                    <associatedProperty key="mono.configFilePath"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="netty" subType="tcp">
                <associatedProperties>
                    <associatedProperty key="mono.rfiVersion"/>
                    <associatedProperty key="mono.outletVersion"/>
                    <associatedProperty key="esb-common.mcdRfiEndpoint"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="routeConfig" fileReference="com.dtg.esb.mono.cfg">
                <property changed="false" constant="false" secret="false" key="mono.test"
                    exampleValue="1"
                    description="When set to 1, the sites created will not be invoiced to DTG and will be periodically removed. Should only be set to 0 for the production environment"
                    >1</property>
                <property changed="false" constant="true" secret="false" key="mono.trace"
                    exampleValue="false" description="When set to true detailed logging is enabled."
                    >false</property>
                <property changed="false" constant="true" secret="false" key="mono.endPoint"
                    exampleValue="https://hal.mono.net"
                    description="The mono API endpoint. N.B. Make sure the machine where Fuse is running can reach the endpoint, e.g. using curl -I https://hal.mono.net"
                    >https://hal.mono.net</property>
                <property changed="false" constant="true" secret="true" key="mono.userToken"
                    exampleValue="bf8ed89247286144140af69170f2871b"
                    description="DTG Mono reseller token">********</property>
                <property changed="false" constant="true" secret="false" key="mono.rfiVersion"
                    exampleValue="V2.4"
                    description="The RFI version that will be use to retrieve information from CRM in the process of creating and account"
                    >V2.4</property>
                <property changed="false" constant="true" secret="false" key="mono.outletVersion"
                    exampleValue="V2.4" description="The outlet version">V2.4</property>
                <property changed="false" constant="true" secret="false" key="mono.configFilePath"
                    exampleValue="classpath:META-INF/config/mono-configuration.xml"
                    description="Optional "
                    >classpath:META-INF/config/mono-configuration.xml</property>
            </properties>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property changed="false" constant="false" secret="false"
                    key="esb-common.monoRffEndpoint" exampleValue="netty:tcp://localhost:9996"
                    description="The entry to synchronous route."
                    >direct-vm:monoRffEndpoint</property>
                <property changed="false" constant="false" secret="false"
                    key="esb-common.mcdRfiEndpoint" exampleValue="netty:tcp://mcdhost:9997"
                    description="The consuming end point of the Fuse-MCD.rfi route."
                    >netty:tcp://dtgdmcdcrm01.dtglan.local:9997</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="             http://schema.detelefoongids.nl             http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="crm-ctb-to-exact" esbLocation="internal" synchronous="false" version="V1.2">
        <maven groupId="com.dtg.esb.exact" artifactId="crm-ctb-to-exact" version="6.1.0"
            feature="true" configChanged="false"/>
        <description>
            <paragraph> The purpose of the CRM/Exact route is to allow the CRM to pass orders to
                invoice to exact. </paragraph>
        </description>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
            </changes>
            <changes version="6.1.0.RC1">
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2708">Make use of new transaction mechanism.</change>
                <change jira="DTGESB-2628">Adjusted meta-data</change>
                <change jira="DTGESB-2128">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-1897">Created.</change>
            </changes>
        </history>
        <endpoints>
            <endpoint direction="from" archeType="queue" subType="JMS">
                <associatedProperties>
                    <associatedProperty key="esb-common.ctbQueue"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="file">
                <associatedProperties>
                    <associatedProperty key="crmCtbToExact.outputDirectory"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://activeMQ:61616"
                    description="The activeMQ broker used."
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false" key="esb-common.ctbQueue"
                    exampleValue="jms:queue:ctbQueue"
                    description="Input queue for the commandToBill messages."
                    >jms:queue:ctbQueue</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.exact.crm.ctb.cfg">
                <property constant="false" changed="false" secret="false"
                    key="crmCtbToExact.outputDirectory" exampleValue="/var/exact/ctb"
                    description="The directory where the files are created for exact to be picked up. If the directory does not exist, it will be created."
                    >/var/lib/jboss/transport/exact/crm-to-exact/CommandToBill</property>
                <property constant="true" changed="false" secret="false" key="crmCtbToExact.trace"
                    exampleValue="false" description="When set to true detailed logging is enabled."
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="         http://schema.detelefoongids.nl         http://schema.detelefoongids.nl/esb-config/V1.2/esb-route.xsd"
        id="util-ws-endpoint" esbLocation="internal" synchronous="false" version="V1.2">
        <maven configChanged="false" groupId="com.dtg.esb.utilws" artifactId="util-ws-endpoint"
            version="6.1.0" feature="true"/>
        <description>
            <paragraph> The route is part of the Matchcraft integration and is responsible for
                picking up messages from the Queue and post them to the Util WebService (Util is
                also known as Satellite). </paragraph>
            <paragraph> This route will be able to pick up any type of XML messages posted on the
                queue, as long as the receiving WebService is able to handle them. Currently support
                messages types are CommandToPublish-composition, CommandToFulfill and
                NotificationOnUpdate. </paragraph>
            <paragraph> When a message is rejected by the Util Webservice, the message will be put
                back on top of the queue and the route will shut itself down. </paragraph>
        </description>
        <dependingRoutes>
            <!-- Depends on -->
            <esbRoute id="esb-ws-endpoint" version="6.1.0"/>
            <!-- Used by -->
        </dependingRoutes>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
            </changes>
            <changes version="6.1.0.RC1">
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0.RC3">
                <change>Trying a different JMS shutdown mechanism</change>
            </changes>
            <changes version="6.0.0.RC2">
                <change jira="DTGESB-2661">Refactor JMS handling to deal with a different pool
                    implementation</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2625">Adjusted meta-data</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1328">Add namespaces to soap messages.</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-974">changed artifact from composer-consumer-util to
                    util-ws-endpoint</change>
            </changes>
        </history>
        <notes>
            <note date="2013-10-10">This route will shutdown when the message could not be delivered
                to the Util webservice. Therefor the status of this route should be monitored
                closely.</note>
            <note date="2013-01-30">As of Sprint 19, DTGESB-974 the artifact is changed from
                composer-consumer-util version 1.0.1 to util-ws-endpoint version 1.0.0</note>
            <note date="2012-11-07">This route will accept any xml message and will try to send it
                to the satellite webservice. The input queue of this route functions as a generic
                input queue that can be used as an endpoint for other routes.</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="jms" subType="XML">
                <schemas>
                    <schema version="V3.1" type="CTF" validating="false"
                        >http://schema.detelefoongids.nl/message/V3.1/CTF.xsd</schema>
                    <schema version="V3.1" type="CTP" validating="false"
                        >http://schema.detelefoongids.nl/message/V3.1/CTP.xsd</schema>
                    <schema version="V2.3" type="NOU" validating="false"
                        >http://schema.detelefoongids.nl/message/V2.3/NOU.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.utilInputQueue"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="webservice" subType="cxf">
                <associatedProperties>
                    <associatedProperty key="utilWsEndpoint.utilWsEndPointAddress"/>
                    <associatedProperty key="utilWsEndpoint.username"/>
                    <associatedProperty key="utilWsEndpoint.password"/>
                    <associatedProperty key="utilWsEndpoint.allowChunking"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="true" changed="false" secret="false"
                    key="esb-common.utilInputQueue" exampleValue="jms:queue:utilInputQueue"
                    description="The queue which is the inout for the messages which are then send to the util-ws-endpoint."
                    >jms:queue:utilInputQueue</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://ams-mq-d01:61616"
                    description="The URL of the (Active)MQ broker"
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.utilws.endpoint.cfg">
                <property constant="false" changed="false" secret="false"
                    key="utilWsEndpoint.utilWsEndPointAddress"
                    exampleValue="http://hostname:8091/orawsv/ESBMGR/ESB_RECEIVER"
                    description="The address of the UTIL web service end point"
                    >http://mbstest6:8091/orawsv/ESBMGR/ESB_RECEIVER</property>
                <property constant="true" changed="false" secret="false"
                    key="utilWsEndpoint.allowChunking" exampleValue="false"
                    description="Fixed value, do not change without consulting the ESB team! Value indicates that the UTIL WS accepts chunked messages which will greatly speed-up communication but is currently not supported by UTIL. As soon as UTIL supports this, this value can be set to true."
                    >false</property>
                <property constant="false" changed="false" secret="false"
                    key="utilWsEndpoint.username" exampleValue="ESBUSR"
                    description="The username to authenticate against the web service."
                    >ESBUSR</property>
                <property constant="false" changed="false" secret="true"
                    key="utilWsEndpoint.password" exampleValue="tstutil"
                    description="The password to authenticate against the web service."
                    >********</property>
                <property constant="true" changed="false" secret="false"
                    key="utilWsEndpoint.utilWsEndpointOutEndpoint"
                    exampleValue="cxf:bean:utilEndpoint"
                    description="Fixed value, do not change without consulting the ESB Team! Value indicates the WebService endpoint configuration"
                    >cxf:bean:utilEndpoint</property>
                <property constant="true" changed="false" secret="false" key="utilWsEndpoint.trace"
                    exampleValue="false"
                    description="When set to true, low grained information about the exchange processed by this route, will be logged into the log files. To avoid explosive growth of these log files this property should normally be set to false. When this property is not set, tracing will default to false. Less verbose logging can also be enabled by setting the log level to DEBUG in karaf."
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="esb-ws-endpoint" esbLocation="internal" synchronous="true" version="V1.2">
        <maven configChanged="true" groupId="com.dtg.esb.webservice" artifactId="esb-ws-endpoint"
            version="6.2.0" feature="true"/>
        <description>
            <paragraph> This end point represents the main entry point for all messages that are
                received from clients like CRM. please note that there is an internal route
                connected both routes specified below. All asynchronous messages are routed to that
                route and routed to the queue specified in the allowedMesssage.xml file. </paragraph>
            <paragraph>If asynchronous message cannot be routed they are placed on the
                unRoutableQueue (specified by property: esbWebserviceEndpoint.unroutableQueue).
                Synchronous requestForValidation messages are routed to the validation
                facade.</paragraph>
            <paragraph>Synchronous (requestForInformation or requestForUpdate) messages are router
                to either MCD or CRM. This depends on the content of the message, when the request
                is outlet based it is routed to MCD, otherwise it is routed to CRM.</paragraph>
        </description>
        <history>
            <changes version="6.2.0">
                <change jira="DTGESB-3757">Adapt ESB webservice so that RFF messages are routed
                    correctly</change>
            </changes>
            <changes version="6.1.0">
                <change jira="DTGESB-2905">Create release candidate.</change>
                <change jira="DTGESB-2763">Now catching all exceptions raised in Translation sub
                    route. Exceptions are mapped onto an error message that is set as header
                    property of the in message."&gt;</change>
                <change jira="DTGESB-2661">Refactor JMS handling to deal with a different pool
                    implementation</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2632">Adjusted meta-data</change>
                <change jira="DTGESB-2060">As a non CRM user I want to read data from CRM according
                    account, contact or installBase (RFI)</change>
                <change jira="DTGESB-2161">As a CRM user I want my listings published
                    (translation/transformation in esb-ws-endpoint)</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1793">Continued: Add more functionality to esb-ws-endpoint in
                    order to have more content based routing possibilities </change>
                <change jira="DTGESB-629">Add more functionality to esb-ws-endpoint in order to have
                    more content based routing possibilities </change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-36">Strip wrapper from ESB webservice aanpassen</change>
            </changes>
        </history>
        <notes>
            <note date="2013-12-10"> Note that the port numbers for the properties mcdRfiEndpoint,
                mcdRfuEndpoint, and mcdRfvEndpoint should be different.</note>
            <note date="2013-09-13">if you do not provide with each formal endpoint name from within
                the allowedMessages.xml a corresponding configuration property setting in the shared
                configuration file, the esb-ws-endpoint will start, and have the following error
                message in the log file: “Cannot build message distributing route: there is no URL
                associated with consuming endpoint [endPointName].” Where endPointName is the formal
                end point name for which no corresponding configuration could be found in the shared
                configuration file.</note>
            <note date="2013-09-17">RFU, And RFI messages referring to account, contact, and install
                base are forwarded to CRM, whereas RF, and RFU messages to outlet are forwarded to
                MCD.</note>
            <note date="2013-06-04">Distributor now probes all xpath filters, and distributes to all
                endpoints with 'successful' xpath filter </note>
            <note date="2013-05-23">Moved routing logic of esb-main-msg-distributor into
                esb-ws-endpoint, so that the esb-main-msg-distributor becomes obsolete </note>
            <note date="2013-04-15">Refactor of original esb-webservice-endpoint project, and
                basically this is a stripped version </note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="webservice" subType="SOAP">
                <associatedProperties>
                    <associatedProperty key="esbWebserviceEndpoint.webservicePort"/>
                    <associatedProperty key="esbWebserviceEndpoint.pathToAllowedMessagesXsd"/>
                    <associatedProperty
                        key="esbWebserviceEndpoint.validSchemasConfigurationFileLocation"/>
                    <associatedProperty key="esbWebserviceEndpoint.trace"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="queue" subType="XML">
                <associatedProperties>
                    <associatedProperty key="esb-common.esbBrokerUrl"/>
                    <associatedProperty key="esb-common.deadLetter"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="MCD" subType="TCP">
                <associatedProperties>
                    <associatedProperty key="esb-common.mcdRfiEndpoint"/>
                    <associatedProperty key="esb-common.mcdRfuEndpoint"/>
                    <associatedProperty key="esb-common.mcdRfvEndpoint"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="CRM" subType="direct-vm">
                <associatedProperties>
                    <associatedProperty key="esb-common.crmSyncEndpoint"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="MONO" subType="direct-vm">
                <associatedProperties>
                    <associatedProperty key="esb-common.monoRffEndpoint"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="from" archeType="queue" subType="XML">
                <associatedProperties>
                    <associatedProperty key="esb-common.esbBrokerUrl"/>
                    <associatedProperty key="esb-common.esbInputQueue"/>
                    <associatedProperty key="esbWebserviceEndpoint.pathToAllowedMessagesXsd"/>
                    <associatedProperty
                        key="esbWebserviceEndpoint.validSchemasConfigurationFileLocation"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="queue" subType="XML">
                <associatedProperties>
                    <associatedProperty key="esb-common.esbBrokerUrl"/>
                    <associatedProperty key="esb-common.deadLetter"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://localhost:61616"
                    description="ESB broker url">tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.esbInputQueue" exampleValue="jms:queue:esbInputQueue"
                    description="Queue on which all ESB clients posts asynchronous messages."
                    >jms:queue:esbInputQueue</property>
                <property constant="true" changed="false" secret="false" key="esb-common.deadLetter"
                    exampleValue="jms:queue:esbDeadLetterQueue"
                    description="Any message that is unacceptable to the ESB is placed on this queue."
                    >jms:queue:esbDeadLetterQueue</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.restValidationPort" exampleValue="8801"
                    description="Was port number on which the validation component listens for validation requests."
                    >8094</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.mcdRfiEndpoint" exampleValue="netty://9997"
                    description="The endpoint for RequestForInformation outlet requests. Note that the port numbers for RFI, RFU, and RFV should be different."
                    >netty:tcp://dtgdmcdcrm01.dtglan.local:9997</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.mcdRfuEndpoint" exampleValue="netty://9998"
                    description="The endpoint for RequestForUpdate outlet requests. Note that the port numbers for RFI, RFU, and RFV should be different."
                    >netty:tcp://dtgdmcdcrm01.dtglan.local:9998</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.mcdRfvEndpoint" exampleValue="netty://9999"
                    description="The endpoint for RequestForValidation outlet requests. Note that the port numbers for RFI, RFU, and RFV should be different."
                    >netty:tcp://dtgdmcdcrm01.dtglan.local:9999</property>
                <property constant="true" changed="true" secret="false"
                    key="esb-common.monoRffEndpoint" exampleValue="direct-vm:monoRffSyncEndpoint"
                    description="End point to RequestForFulfillment request. MONO will be the final destination"
                    >direct-vm:monoRffEndpoint</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.crmSyncEndpoint" exampleValue="direct-vm:crmSyncEndpoint"
                    description="End point to past synchronous messages bound for CRM to."
                    >direct-vm:crmSyncEndpoint</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.ws.endpoint.cfg">
                <property constant="true" changed="false" secret="false"
                    key="esbWebserviceEndpoint.pathToAllowedMessagesXsd"
                    exampleValue="http://schema.detelefoongids.nl/esb-config/v1.3/allowedMessages.xsd"
                    description="URL to the location of schema for allowedMessages.xsd version 1.3"
                    >http://schema.detelefoongids.nl/esb-config/v1.3/allowedMessages.xsd</property>
                <property constant="false" changed="true" secret="false"
                    key="esbWebserviceEndpoint.validSchemasConfigurationFileLocation"
                    exampleValue="etc/esb-ws-endpoint-1.1.0-allowedMessages.xml"
                    description="The location of the XML file, containing all message definitions. Or rather, a control file of what is allowed on the bus and how it is routed. For an example configuration file see appendix A. As the content of this file is maintained by the ESB Development team it is OK to copy the content of this file to the configured location. Note that in time the content of the allowedMessages.xml file and this esb-ws-endpoint release will be out of sync, since changes to the allowedMessages.xml file can be released separately."
                    >/var/lib/jboss/fuse-files/dtg-ci-esbi/6.0.1/validation/d03-esb-ws-endpoint-1.6.4-allowedMessages.xml</property>
                <property constant="true" changed="false" secret="false"
                    key="esbWebserviceEndpoint.webservicePort" exampleValue="8881"
                    description="This property defines the HTTP port to which the webservice will listen for incoming SOAP messages. Note: This property has been renamed from webservice-port to adhere to the naming standard."
                    >8092</property>
                <property constant="true" changed="false" secret="false"
                    key="esbWebserviceEndpoint.unroutableQueue"
                    exampleValue="jms:queue:unroutableQueue"
                    description="Queue for message which have valid structure but cannot be routed to any other queue."
                    >jms:queue:unroutableQueue</property>
            </properties>
        </configuration>
        <allowedMessages>http://ams-build01:8081/esbdev/configuration-files/validation/ams-jbf-d03/d03-esb-ws-endpoint-1.5.0-allowedMessages.xml</allowedMessages>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="         http://schema.detelefoongids.nl         http://schema.detelefoongids.nl/esb-config/V1.2/esb-route.xsd"
        id="blacklist-debtor-status-route" esbLocation="internal" synchronous="false" version="V1.2">
        <maven configChanged="false" feature="true" groupId="com.dtg.esb.debtorstatus"
            artifactId="debtor-status-route" version="6.1.0"/>
        <description>
            <paragraph>The debtor-status-route enables Credit Manager to provide debtor status to
                the Microsoft CRM Dynamics system. </paragraph>
            <paragraph>When a customer does not pay his bill to DTG, after a certain amount of time,
                their credit status will change in the Credit Manager system. This information is
                necessary in CRM (so that we don’t try to sell more stuff to them), thus it needs to
                be transferred there. Also when the customer finally does pay, the credit status
                will change back to normal, and this is also necessary to update in CRM. </paragraph>
            <paragraph>For this purpose Credit Manager exports two CSV files, to two separate
                locations. One is the Teleopen list, also known as the black list, which contains an
                overview of charges that are overdue, and which customers are liable for these
                charges. There can be several per customer. </paragraph>
            <paragraph>The other file Credit Manager exports is known as the white list. This one
                consists only of a list of customer ids which have now paid their debts in full, and
                thus will go back to normal credit status. </paragraph>
            <paragraph>The debtor-status-route consists of two routes, one that picks up the
                blacklist, and one that picks up the white list. Both routes parse the CSV file,
                create an XML from it, and deliver it to the ESB input queue, from which the message
                will be routed to the inputQueue of CRM. </paragraph>
            <paragraph>The debtor-status-route consists of two sub routes.There is a sub route for
                the 'black list', and one for the 'white list' data. Both routes are file based.
                That is, they expect their input to be stored in a file that is deposited in the
                'source' directory of the route. Next to the source directory each sub route
                requires three more directories to be present. So the debtor-status-route requires
                the following 4 directories to be present. </paragraph>
            <paragraph>- Source : The directory into which Credit Manager must place the CSV file
                for processing by the debtor-status-route </paragraph>
            <paragraph>- Work : The directory into which the debtor-status-route moves the input
                file before, and while processing. The debtor-status-route also places a lock file
                after having moved the file, which gets removed after having processed the file </paragraph>
            <paragraph>- Error : The processed file is placed in this directory when the input field
                could not be processed successfully </paragraph>
            <paragraph>- Done : The processed file is placed in this directory after it has been
                processed successfully </paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="esb-ws-endpoint" version="6.0.0"/>
        </dependingRoutes>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2661">Make use of new transaction mechanism.</change>. <change
                    jira="DTGESB-2624">Adjusted meta-data</change>
                <change jira="DTGESB-2356">Updated meta data for auto generation release
                    documentation.</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1807">As an OPS I don't want to have unnecessary routes, and
                    want to see the topics and mini routes gone. i.e Messages are now always posted
                    to the esbInputQueue.</change>
                <change jira="DTGESB-1335">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="1.0.2">
                <change jira="DTGCON-1627">UAT - whitelisting on T1 not operable</change>
                <change jira="DTGESB-1164">DTGCON-1290: UAT: CRM does not correctly import and
                    process "blacklisted" from Creditmanager to CRM</change>
                <change jira="DTGESB-1008">Implement meta data for ESB website.</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-8">FCRETCRM_F1 and FCRETCRM_F2: Teleopen / blacklist, whitelist
                    (standAlone)</change>
            </changes>
        </history>
        <notes>
            <note>This route includes both the blacklist information as the whitelist
                information.</note>
            <note> The configuration settings specified below first describe the blacklist
                configuration settings and only after that the whilelist configuration settings. The
                sequence in which the blacklist file and the whitelist file are processed is very
                important. First the blacklist file should be processed and only when this is
                completely finished the whitelist file can be processed. The order of this can be
                configured by setting the properties debtorStatusRoute.blackListCronString and
                debtorStatusRoute.whiteListCronString </note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="file" subType="csv">
                <associatedProperties>
                    <associatedProperty key="debtorStatusRoute.blackListPathToSourceDirectory"/>
                    <associatedProperty key="debtorStatusRoute.blackListCronString"/>
                    <associatedProperty key="debtorStatusRoute.blackListTrancheSize"/>
                    <associatedProperty key="debtorStatusRoute.blackListPathToWorkDirectory"/>
                    <associatedProperty key="debtorStatusRoute.blackListPathToDoneDirectory"/>
                    <associatedProperty key="debtorStatusRoute.blackListPathToErrorDirectory"/>
                    <associatedProperty key="debtorStatusRoute.blackList.trace"/>
                    <associatedProperty key="debtorStatusRoute.whiteListPathToSourceDirectory"/>
                    <associatedProperty key="debtorStatusRoute.whiteListCronString"/>
                    <associatedProperty key="debtorStatusRoute.whiteListTrancheSize"/>
                    <associatedProperty key="debtorStatusRoute.whiteListPathToWorkDirectory"/>
                    <associatedProperty key="debtorStatusRoute.whiteListPathToDoneDirectory"/>
                    <associatedProperty key="debtorStatusRoute.whiteListPathToErrorDirectory"/>
                    <associatedProperty key="debtorStatusRoute.whiteList.trace"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="jms" subType="queue">
                <schemas>
                    <schema version="V1.0" type="invoiceStatusSnapshot.xsd" validating="false"
                        >http://schema.detelefoongids.nl/domain/v1.0/invoiceStatusSnapshot.xsd</schema>
                    <schema version="V1.0" type="whiteListedDebtors.xsd" validating="false"
                        >http://schema.detelefoongids.nl/domain/v1.0/whiteListedDebtors.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.esbBrokerUrl"/>
                    <associatedProperty key="esb-common.esbInputQueue"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="true" changed="false" secret="false"
                    key="esb-common.esbInputQueue" exampleValue="jms:queue:esbInputQueue"
                    description="The queue which is the output for the messages which are then picked up by the esb-ws-endpoint."
                    >jms:queue:esbInputQueue</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://ams-mq-d01:61616"
                    description="The URL of the (Active)MQ broker"
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.debtor.status.cfg">
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListCronString" exampleValue="cron\=0+0+*+*+*+?"
                    description="The cron string for scheduling the polling of the black-list file. NOTE: It is of paramount importance that any white-list file is processed after the entire black-list file has been processed! You can do this by choosing cron strings for the black list, and white list route that guarantee that white list sub route is always launched after the black list sub route has processed the black list input file in its entirety. A gap of at least 10 minutes is recommended."
                    >cron=0+*/1+*+*+*+?</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListCronString" exampleValue="cron\=0+0+0+*+*+?"
                    description="The cron string for scheduling the polling of the white-list file"
                    >cron=0+*/1+*+*+*+?</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListTrancheSize" exampleValue="10"
                    description="Specifies the number of CSV records that will go in a single WhiteListedDebtors message"
                    >10</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListTrancheSize" exampleValue="10"
                    description="Specifies the number of CSV records that will go in a single DebtorStatusUpdate message"
                    >10</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListPathToSourceDirectory"
                    exampleValue="/tmp/credit-manager/black-list/source"
                    description="The directory from where the route will pick up the black-list files."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/blacklist/source</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListPathToWorkDirectory"
                    exampleValue="/tmp/credit-manager/black-list/work"
                    description="The directory where the route will keep black-list files during processing."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/blacklist/work</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListPathToDoneDirectory"
                    exampleValue="/tmp/credit-manager/black-list/done"
                    description="The directory where the route will move the black-list when processing has finished sucessfully."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/blacklist/done</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.blackListPathToErrorDirectory"
                    exampleValue="/tmp/credit-manager/black-list/error"
                    description="The directory where the route will move  the black-list if the processing failed."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/blacklist/error</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListPathToSourceDirectory"
                    exampleValue="/tmp/credit-manager/white-list/source"
                    description="The directory from where the route will pick up the white-list files."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/whitelist/source</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListPathToWorkDirectory"
                    exampleValue="/tmp/credit-manager/white-list/work"
                    description="The directory where the route will keep white-list files during processing."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/whitelist/work</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListPathToDoneDirectory"
                    exampleValue="/tmp/credit-manager/white-list/done"
                    description="The directory where the route will move the white-list when processing has finished sucessfully."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/whitelist/done</property>
                <property constant="false" changed="false" secret="false"
                    key="debtorStatusRoute.whiteListPathToErrorDirectory"
                    exampleValue="/tmp/credit-manager/white-list/error"
                    description="The directory where the route will move  the white-list if the processing failed."
                    >/var/lib/jboss/transport/creditmanager/cre-to-crm/whitelist/error</property>
                <property constant="true" changed="false" secret="false"
                    key="debtorStatusRoute.blackList.trace" exampleValue="true (default=false)"
                    description="When set to true tracing on the black-list route is enabled. Not specifying this parameter, or setting it to false disables tracing."
                    >false</property>
                <property constant="true" changed="false" secret="false"
                    key="debtorStatusRoute.whiteList.trace" exampleValue="true (default=false)"
                    description="When set to true tracing on the white-list route is enabled. Not specifying this parameter, or setting it to false disables tracing"
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="             http://schema.detelefoongids.nl             http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="direct-debit-mandates-persist" esbLocation="internal" synchronous="false" version="V1.2">
        <maven groupId="com.dtg.esb.debit.mandate" artifactId="direct-debit-mandates-persist"
            version="1.0.0" feature="true" configChanged="false"/>
        <description>
            <paragraph> The Exact billing system is currently not capable of handling event based
                notification on update messages for direct debit mandates. It can only process this
                is information using a batch, where the batch can process only one file at the time. </paragraph>
            <paragraph> The ESB will collect all updates on direct-debit-mandates, received from
                CRM, and periodically aggregate the collected direct debit mandate updates into one
                big notificationOnUpdate message, so that this message can be processed by the Exact
                billing system. This route and the direct-debit-mandates-aggregate route facilitate
                this functionality. </paragraph>
            <paragraph> This route receives the direct debit mandates notificationOnUpdate messages
                from the esb-ws-endpoint. It will fetch all the direct debit mandates fragments from
                this message and store them into file, stripping of the notificationOnUpdate root
                element. The files all have a timestamp, down to the millisecond, in the file name
                so that the updates can be processed in the same order as they have been received by
                the ESB. </paragraph>
            <paragraph> When a message from the queue does not contain a direct debit mandate
                fragment or when the file can not be persisted on the file system, an exception will
                be thrown, triggering this route to go into suspend mode. This will ensure that no
                messages will be lost. The route needs to be monitored whether it is suspended or
                not. </paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="direct-debit-mandates-aggregate"/>
        </dependingRoutes>
        <history>
            <changes version="1.0.0">
                <change jira="DTGESB-4435">Finalize directDebitMandate artifacts</change>
            </changes>
            <changes version="1.0.0.RC2">
                <change jira="DTGESB-4240">Test finding: Aggregated direct-debit-mandate file should
                    have a file name representing the time it was created. (DTGESB-4239)</change>
            </changes>
            <changes version="1.0.0.RC1">
                <change jira="DTGESB-3660">Collect notificationOnUpdate for direct debit mandates
                    and aggregate.</change>
            </changes>
        </history>
        <notes>
            <note>The route uses the suspend functionality and needs to be monitored for
                this.</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="queue" subType="XML">
                <schemas>
                    <schema version="V3.0" type="NOU.xsd" validating="false"
                        >http://schema.detelefoongids.nl/message/v3.0/NOU.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.esbBrokerUrl"/>
                    <associatedProperty key="esb-common.directDebitMandateQueue"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="file" subType="XML">
                <associatedProperties>
                    <associatedProperty key="esb-common.directDebitDirectory"/>
                    <associatedProperty key="esb-common.directDebitMandateEncoding"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="routeConfig"
                fileReference="com.dtg.esb.direct.debit.mandate.persist.cfg">
                <property changed="true" constant="true" secret="false"
                    key="directDebitMandatePersist.trace" exampleValue="false"
                    description="When set to true detailed logging is enabled.">true</property>
            </properties>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property changed="false" constant="true" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://activeMQ:61616"
                    description="The activeMQ broker used."
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property changed="false" constant="true" secret="false"
                    key="esb-common.directDebitMandateQueue"
                    exampleValue="jms:queue:directDebitMandateQueue"
                    description="The queue used to store the notificationOnupdate/directDebitMandate messages in."
                    >jms:queue:directDebitMandateQueue</property>
                <property changed="false" constant="false" secret="false"
                    key="esb-common.directDebitDirectory"
                    exampleValue="/tmp/directDebitMandateParts"
                    description="The directory to store the fragments in. Note that this property does not have the prefix file://"
                    >/var/lib/jboss/transport/exact/crm-to-exact/debit/source</property>
                <property changed="false" constant="true" secret="false"
                    key="esb-common.directDebitMandateEncoding" exampleValue="UTF-8"
                    description="The encoding to use when writing the files. If not configured it will default to UTF-8"
                    >UTF-8</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="crm-sync-ws-endpoint" esbLocation="internal" synchronous="false" version="V1.2">
        <maven feature="true" configChanged="false" groupId="com.dtg.esb.crm"
            artifactId="crm-sync-ws-endpoint" version="6.1.0"/>
        <description>
            <paragraph> The CRM synchronous web service end point provides a synchronous interface
                to clients of the ESB. It is in particular intended to Send RFIs, and RFUs to CRM,
                and receive back an RFIR, and RFUR response respectively. </paragraph>
            <paragraph> The ESB web service endpoint (esb-ws-endpoint) dispatches RFIs, and RFUs on
                basis of their content to either the standard validation component, MCD, or to the
                CRM synchronous web service endpoint (crm-sync-ws-endpoint). </paragraph>
        </description>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
            </changes>
            <changes version="6.1.0.RC1">
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2633">Adjusted meta-data</change>
                <change jira="DTGESB-2553">Create synchronous route between ESB and CRM</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
        </history>
        <notes>
            <note date="2013-09-25">Initial version</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="direct-vm" subType="XML">
                <associatedProperties>
                    <associatedProperty key="esb-common.crmSyncWSInput"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="webservice" subType="SOAP">
                <associatedProperties>
                    <associatedProperty key="crmSyncWSEndpoint.address"/>
                    <associatedProperty key="crmSyncWSEndpoint.receiveTimeOut"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="true" changed="false" secret="false"
                    key="esb-common.crmSyncWSInput"
                    exampleValue="direct-vm:crmSyncWSInput?block=true"
                    description="The consuming end point of the CRM synchronous web service route."
                    >direct-vm:crmSyncWSInput?block=true</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.crm.sync.endpoint.cfg">
                <property constant="false" changed="false" secret="false"
                    key="crmSyncWSEndpoint.address"
                    exampleValue="http://hostname:7410/OrganizationService.svc"
                    description="The address of the synchronous CRM web service."
                    >http://192.168.168.32:7510/OrganizationService.svc</property>
                <property constant="true" changed="false" secret="false"
                    key="crmSyncWSEndpoint.receiveTimeOut" exampleValue="300000"
                    description="The amount of time (in milliseconds) to wait for the response message coming back from the CRM web service."
                    >30000</property>
                <property constant="true" changed="false" secret="false"
                    key="crmSyncWSEndpoint.trace" exampleValue="false"
                    description="When set to true, Apache Camel will show route, and exchnage travelling on the route after every step in the route."
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="ivp-ws-endpoint" esbLocation="internal" synchronous="false" version="V1.2">
        <maven configChanged="false" groupId="com.dtg.esb.ivp" artifactId="ivp-ws-endpoint"
            version="6.1.0" feature="true"/>
        <description>
            <paragraph> This route integrates CRM with IVP, so that orders in CRM that should be
                published on the web are sent to IVP. </paragraph>
            <paragraph> This route as of Sprint 12 is divided into two new routes. This route is the
                second part and is responsible for picking up messages from the ivpInputQueue,
                wrapping the message in a SOAP envelope, and finally sent it to the IVP Web Service. </paragraph>
            <paragraph> The reason to divide this route into two routes is to have a queue before
                the IVP webservice so that messages can be stored on a ‘central’ queue with
                destination IVP. Other routes can deliver messages on this ‘central’ queue too. </paragraph>
            <paragraph> Several messages are delivered to the ivpInputQueue. After a message is
                picked-up from the queue the message is wrapped in a SOAP envelope. This because the
                IVP endpoint is a WebService and expects a SOAP message as input. </paragraph>
            <paragraph> The IVP WebService Endpoint is configured as an CXF endpoint. </paragraph>
            <paragraph> The route adds credentials to the message header since the web service
                requires authentication. </paragraph>
        </description>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
            </changes>
            <changes version="6.1.0.RC1">
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0.RC3">
                <change>Trying a different JMS shutdown mechanism</change>
            </changes>
            <changes version="6.0.0.RC2">
                <change jira="DTGESB-2661">Refactor JMS handling to deal with a different pool
                    implementation</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2634">Adjusted meta-data</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1333">Upgrade route ivp-ws-endpoint to 7.1 root pom</change>
            </changes>
            <changes version="1.1.0">
                <change jira="DTGESB-725">Route runs with transactional-acknowledgement which
                    triggers a rollback in case of exceptions and shutdowns the route</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-521">Alter current IVP route to deal with new WSDL
                    (ESB_RECEIVER)</change>
                <change>Route is splitted into two routes</change>
                <change jira="DTGESB-413">Finalize composer-consumer-util (FCRMTMAT_F1,
                    FCRMTMAT_F2)</change>
                <change jira="DTGESB-314">Initial Release</change>
            </changes>
        </history>
        <notes>
            <note date="2013-10-10">This route will shutdown when the message could not be delivered
                to the Util webservice. Therefor the status of this route should be monitored
                closely.</note>
            <note date="2013-03-27">Route has been upgraded to be deployed in JBoss Fuse ESB
                6.0</note>
            <note date="2012-10-17">Route is split-up into two routes</note>
            <note date="2012-10-11">Initial Release</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="jms" subType="XML">
                <schemas>
                    <schema version="V3.1" type="CTP" validating="false"
                        >http://schema.detelefoongids.nl/message/V3.1/CTP.xsd</schema>
                    <schema version="V2.3" type="NOU" validating="false"
                        >http://schema.detelefoongids.nl/message/V2.3/NOU.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.ivpInputQueue"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="webservice" subType="CXF">
                <associatedProperties>
                    <associatedProperty key="ivpWsEndpoint.ivpEndPointAddress"/>
                    <associatedProperty key="ivpWsEndpoint.allowChunking"/>
                    <associatedProperty key="ivpWsEndpoint.password"/>
                    <associatedProperty key="ivpWsEndpoint.username"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://localhost:61616"
                    description="ESB broker url">tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.ivpInputQueue" exampleValue="jms:queue:ivpInputQueue"
                    description="Queue on which all ESB clients posts asynchronous messages."
                    >jms:queue:ivpInputQueue</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.ivp.ws.endpoint.cfg">
                <property constant="false" changed="false" secret="false"
                    key="ivpWsEndpoint.ivpEndPointAddress"
                    exampleValue="http://ams-ivptest:8091/orawsv/ESBMGR/ESB_RECEIVER"
                    description="The address of the IVP web service end point."
                    >http://ams-ivptest:8091/orawsv/ESBMGR/ESB_RECEIVER</property>
                <property constant="true" changed="false" secret="false"
                    key="ivpWsEndpoint.allowChunking" exampleValue="false"
                    description="Fixed value, do not change without consulting the ESB team! Value indicates that the IVP WS accepts chunked messages which will greatly speed-up communication but is currently not supported by IVP. As soon as IVP supports this, this value can be set to true"
                    >false</property>
                <property constant="false" changed="false" secret="false"
                    key="ivpWsEndpoint.username" exampleValue="esbusr"
                    description="This parameter value will be base64 encoded by the route itself after it has been combined with the specified password below."
                    >esbusr</property>
                <property constant="false" changed="false" secret="true"
                    key="ivpWsEndpoint.password" exampleValue="T001"
                    description="This parameter value will be base64 encoded by the route itself after it has been combined with the specified username above"
                    >********</property>
                <property constant="true" changed="false" secret="false" key="ivpWsEndpoint.trace"
                    exampleValue="false"
                    description="When set to true, low grained information about the exchange processed by this route, will be logged into the log files. To avoid explosive growth of these log files this property should normally be set to false. When this property is not set, tracing will default to false. Less verbose logging can also be enabled by setting the log level to DEBUG in karaf."
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="matchcraft-sea-performance-feedback-to-esb-input-queue" esbLocation="internal"
        synchronous="false" version="V1.2">
        <maven configChanged="true" groupId="com.dtg.esb.matchcraft"
            artifactId="matchcraft-sea-performance-feedback-to-esb-input-queue" version="6.1.0"
            feature="true"/>
        <description>
            <paragraph> User story :As a CRM user I want to see the consumed click/euro budget of
                any SEA product so that e.g. at 80% I can contact the customer. </paragraph>
            <paragraph> This route first picks-up a XML performance feedback file with multiple
                merchants. This file is validated against the allowed Messages file for this route
                and when allowed, it is validated against the performance-feedback XSD schema, when
                valid the XML file is split into multiple merchant XML messages. </paragraph>
            <paragraph> Each single merchant XML message will be transformed into a CRM XML message
                format, according to statusUpdatePublication schema. Finally the status update
                publication will be sent to the esbInputQueue for further distribution. When the
                complete is processed it is moved to the done folder, otherwise it will be moved to
                the error folder. </paragraph>
        </description>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3362">Finalize release candidate.</change>
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2622">Adjusted meta-data</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="3.0.0">
                <change jira="DTGESB-1798">Rename the matchcraft-sea-performance-feedback-to-topic
                    route to matchcraft-sea-performance-feedback-to-esb-input-queue</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1331">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-745">Implemented new XSD version</change>
            </changes>
        </history>
        <notes>
            <note date="2013-06-03">Migrated route to use the esb-queue directly.</note>
            <note date="2012-11-06">New release due to new version of the
                'matchcraft-performance-feedback' schema.</note>
            <note date="2012-11-06">The input file is created by the Satellite environment, which
                will filter out all MBS merchants.</note>
            <note date="2012-11-06">The Matchcraft-performance-feeback.xsd version 2 is known on the
                schema server as V1.1.</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="file" subType="XML">
                <schemas>
                    <schema validating="true" type="matchcraftClickReportV2" version="2"
                        >http://schema.detelefoongids.nl/third-party/matchcraft/V1.1/performance-feedback.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="matchcraftPerformanceFeedbackMerchant.pollDelay"/>
                    <associatedProperty
                        key="matchcraftPerformanceFeedbackMerchant.pathToSourceDirectory"/>
                    <associatedProperty
                        key="matchcraftPerformanceFeedbackMerchant.pathToWorkDirectory"/>
                    <associatedProperty
                        key="matchcraftPerformanceFeedbackMerchant.validSchemasConfigurationFileLocation"/>
                    <associatedProperty
                        key="matchcraftPerformanceFeedbackMerchant.pathToAllowedMessagesXsd"/>
                    <associatedProperty
                        key="matchcraftPerformanceFeedbackMerchant.pathToDoneDirectory"/>
                    <associatedProperty
                        key="matchcraftPerformanceFeedbackMerchant.pathToErrorDirectory"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="queue" subType="XML">
                <schemas>
                    <schema validating="false" type="SUP" version="V3.0"
                        >http://schema.detelefoongids.nl/message/V3.0/SUP.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.esbInputQueue"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://localhost:61616"
                    description="ESB broker url">tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.esbInputQueue" exampleValue="jms:queue:esbInputQueue"
                    description="Queue on which all ESB clients posts asynchronous messages."
                    >jms:queue:esbInputQueue</property>
            </properties>
            <properties id="routeConfig"
                fileReference="com.dtg.esb.matchcraft.performance.feedback.cfg">
                <property constant="false" changed="false" secret="false"
                    key="matchcraftPerformanceFeedbackMerchant.pollDelay" exampleValue="500"
                    description="This property defines the polling interval in milliseconds (for when to detect new files)"
                    >1000</property>
                <property constant="false" changed="false" secret="false"
                    key="matchcraftPerformanceFeedbackMerchant.pathToSourceDirectory"
                    exampleValue="/tmp/matchcraft/source"
                    description="This property defines the source directory from where the feedback XML from Matchcraft will be picked up."
                    >/var/lib/jboss/transport/matchcraft/matchcraft-to-crm/performance/source</property>
                <property constant="false" changed="false" secret="false"
                    key="matchcraftPerformanceFeedbackMerchant.pathToWorkDirectory"
                    exampleValue="/tmp/matchcraft/work"
                    description="This property defines the work directory. Any XML file in the source is moved to the work directory first (in order to circumvent file locks)"
                    >/var/lib/jboss/transport/matchcraft/matchcraft-to-crm/performance/work</property>
                <property constant="false" changed="false" secret="false"
                    key="matchcraftPerformanceFeedbackMerchant.pathToDoneDirectory"
                    exampleValue="/tmp/matchcraft/done"
                    description="This property defines the done directory. After the XML is being handled, it is moved from work to done"
                    >/var/lib/jboss/transport/matchcraft/matchcraft-to-crm/performance/done</property>
                <property constant="false" changed="false" secret="false"
                    key="matchcraftPerformanceFeedbackMerchant.pathToErrorDirectory"
                    exampleValue="/tmp/matchcraft/error"
                    description="This property defines the error directory to which the XML file will be sent in case of errors."
                    >/var/lib/jboss/transport/matchcraft/matchcraft-to-crm/performance/error</property>
                <property constant="false" changed="true" secret="false"
                    key="matchcraftPerformanceFeedbackMerchant.validSchemasConfigurationFileLocation"
                    exampleValue="etc/validation/matchcraft-1.0.2-allowedMessages.xml"
                    description="This property defines the location to the configuration file defining which schemas are allowed."
                    >/var/lib/jboss/fuse-files/dtg-ci-esbi/6.0.1/validation/d03-matchcraft-1.0.2-allowedMessages.xml</property>
                <property constant="true" changed="false" secret="false"
                    key="matchcraftPerformanceFeedbackMerchant.pathToAllowedMessagesXsd"
                    exampleValue="http://schema.detelefoongids.nl/esb-config/v1.3/allowedMessages.xsd"
                    description="This property defines the location of the schema associated with the allowedMatchcraftMessages.xml file"
                    >http://schema.detelefoongids.nl/esb-config/v1.3/allowedMessages.xsd</property>
                <property constant="true" changed="false" secret="false"
                    key="matchcraftPerformanceFeedbackMerchant.trace" exampleValue="false"
                    description="When set to true, low grained information about the exchange processed by this route, will be logged into the log files. To avoid explosive growth of these log files this property should normally be set to false. When this property is not set, tracing will default to false. Less verbose logging can also be enabled by setting the log level to DEBUG in karaf."
                    >false</property>
            </properties>
        </configuration>
        <allowedMessages>http://ams-build01:8081/esbdev/configuration-files/validation/ams-jbf-d03/d03-matchcraft-1.0.2-allowedMessages.xml</allowedMessages>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="         http://schema.detelefoongids.nl         http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="exact-payments-to-esb-input-queue" esbLocation="internal" synchronous="false"
        version="V1.2">
        <maven configChanged="true" groupId="com.dtg.esb.payments"
            artifactId="exact-payments-to-esb-input-queue" version="6.1.0" feature="true"/>
        <description>
            <paragraph> All payments made by DTG customers are registered in the Exact financial
                accounting system. To allow the users of CRM, in particular the customer relations
                department, to have the payment history of a customer at their disposal, payment
                information needs to be forwarded to the CRM system. </paragraph>
            <paragraph> The exact-payments-to-esb-input-queue route is responsible for picking up
                payment information, and to forward it to the CRM system. The schema of the
                "statusUpdateBilling" message (http://schema.detelefoongids.nl/message/V2.4/SUB.xsd)
                specifies which payment data items are forwarded to the CRM system. </paragraph>
            <paragraph> The Exact financial accounting system regularly compiles an XML document
                with the data of the payments it has processed since the compilation of the previous
                payment XML document. The payment XML document is made available to the
                exact-payments-to-esb-input-queue route by placing the XML document as a file in a
                directory that is both accessible to Exact, and the route. As the ESB, and therefore
                the route, are running on a Linux node, and Exact runs on a MS-Windows(r) node an
                SMB share must be available that is both accessible from the Linux node, and the
                MS-Windows node. </paragraph>
            <paragraph> The role of exact-payments-to-esb-input-queue </paragraph>
            <paragraph> The route picks up the XML document, and breaks it up into individual
                StatusUpdateBilling messages. Each StatusUpdateBilling message contains data of a
                single payment. The statusUpdateBilling message are posted on the ESB input queue
                from which the message is routed to the subsequent queues from which these messages
                are read and delivered to CRM. </paragraph>
        </description>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
            </changes>
            <changes version="6.1.0.RC1">
                <change jira="DTGESB-2905">Create release candidate.</change>
                <change jira="DTGESB-2849">Upgrade to statusUpdateBilling version 2.4.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2661">Make use of new transaction mechanism.</change>
                <change jira="DTGESB-2621">Adjusted meta-data</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
                <change jira="DTGESB-1960">Upgrade to statusUpdateBilling version 2.3.</change>
            </changes>
            <changes version="1.0.0-RC1">
                <change jira="DTGESB-1756">Renamed artefact from exact-payments-to-topic to
                    exact-payments-to-esb-input-queue</change>
            </changes>
            <changes version="exact-payments-to-topic 2.0.0">
                <change jira="DTGESB-1015">Upgrade exact-payments-to-topic to
                    AbstractRouteBuilder</change>
                <change jira="DTGESB-1322">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="exact-payments-to-topic 1.0.0">
                <change jira="DTGESB-52">As a CRM user, I want to see which payments have been made
                    by a customer and which payments are still open.</change>
                <change jira="DTGESB-395">statusUpdateBilling.xsd changes has to be implemented by
                    ESB to send the messages from ESB to CRM</change>
            </changes>
        </history>
        <notes>
            <note>Even though XSL stylesheets can be declared on the schema server, a decision is
                made to keep the XSLT for this route in the bundle.</note>
            <note>This artefact is intended to run on Fuse ESB 7.1</note>
            <note>This artefact was renamed from exact-payments-to-topic to
                exact-payments-to-esb-input-queue</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="file" subType="XML">
                <schemas>
                    <schema validating="true" type="Betalingen" version="v1.0"
                        >http://schema.detelefoongids.nl/third-party/vcd/v1.0/Betalingen.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="exactPayments.pathToSourceDirectory"/>
                    <associatedProperty key="exactPayments.pathToWorkDirectory"/>
                    <associatedProperty key="exactPayments.pathToDoneDirectory"/>
                    <associatedProperty key="exactPayments.pathToErrorDirectory"/>
                    <associatedProperty key="exactPayments.xmlFileName"/>
                    <associatedProperty key="exactPayments.pollDelay"/>
                    <associatedProperty key="exactPayments.validSchemasConfigurationFileLocation"/>
                    <associatedProperty key="exactPayments.pathToAllowedMessagesXsd"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="jms" subType="XML">
                <schemas>
                    <schema validating="false" version="v2.4" type="SUB"
                        >http://schema.detelefoongids.nl/message/V2.4/SUB.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.esbBrokerUrl"/>
                    <associatedProperty key="esb-common.esbInputQueue"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://localhost:61616"
                    description="ESB broker url">tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.esbInputQueue" exampleValue="jms:queue:esbInputQueue"
                    description="Queue on which all ESB clients posts asynchronous messages."
                    >jms:queue:esbInputQueue</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.exact.payments.cfg">
                <property constant="false" changed="false" secret="false"
                    key="exactPayments.pollDelay" exampleValue="120000"
                    description="This value represents the delay time in milliseconds between polling for the file in the source folder."
                    >500</property>
                <property constant="true" changed="false" secret="false"
                    key="exactPayments.xmlFileName" exampleValue="Betalingen.xml"
                    description="The name of the file to be processed by the route. For example."
                    >Betalingen.xml</property>
                <property constant="false" changed="false" secret="false"
                    key="exactPayments.pathToSourceDirectory"
                    exampleValue="/mnt/exact-payments/source"
                    description="The directory from where the file to be processed should be picked up."
                    >/var/lib/jboss/transport/exact/exact-to-crm/payment/source</property>
                <property constant="false" changed="false" secret="false"
                    key="exactPayments.pathToWorkDirectory" exampleValue="/tmp/exact-payments/work"
                    description="When the route has picked up the source file, it will leave it here while it processes it."
                    >/var/lib/jboss/transport/exact/exact-to-crm/payment/work</property>
                <property constant="false" changed="false" secret="false"
                    key="exactPayments.pathToDoneDirectory" exampleValue="/tmp/exact-payments/done"
                    description="When the route is done processing the file, it will move it to here."
                    >/var/lib/jboss/transport/exact/exact-to-crm/payment/done</property>
                <property constant="false" changed="false" secret="false"
                    key="exactPayments.pathToErrorDirectory"
                    exampleValue="/tmp/exact-payments/error"
                    description="If the processing of the file fails, the route will copy the file here."
                    >/var/lib/jboss/transport/exact/exact-to-crm/payment/error</property>
                <property constant="true" changed="false" secret="false"
                    key="exactPayments.pathToAllowedMessagesXsd"
                    exampleValue=" http://schema.detelefoongids.nl/esb-config/v1.1/allowedMessages.xsd"
                    description="The location of the allowedMessagesxsd where the exactPayments.validSchemasConfigurationFileLocation property should adhere to."
                    >http://schema.detelefoongids.nl/esb-config/v1.3/allowedMessages.xsd</property>
                <property constant="false" changed="true" secret="false"
                    key="exactPayments.validSchemasConfigurationFileLocation"
                    exampleValue="etc/validation/exact-1.1.0-allowedMessages.xml"
                    description="The location of the configuration file that contains the valid schemas for this route. It will work if set to src/test/resources/allowedMessages.xml, but should preferably be set to a location outside the bundle, so that it configurable without re-deploying. "
                    >/var/lib/jboss/fuse-files/dtg-ci-esbi/6.0.1/validation/d03-exact-1.1.0-allowedMessages.xml</property>
                <property constant="true" changed="false" secret="false" key="exactPayments.trace"
                    exampleValue="false" description="To show detailed routing information or not."
                    >false</property>
            </properties>
        </configuration>
        <allowedMessages>http://ams-build01:8081/esbdev/configuration-files/validation/ams-jbf-d03/d03-exact-1.1.0-allowedMessages.xml</allowedMessages>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="             http://schema.detelefoongids.nl             http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="validation-hi" esbLocation="internal" synchronous="true" version="V1.2">
        <maven groupId="com.dtg.esb.commons.validation" artifactId="validation-hi"
            version="6.4.0.RC2" feature="true" configChanged="true"/>
        <description>
            <paragraph> The validation-hi route validates name and address fragments by calling the
                Human Inference (HI) service. The result of this call is incorporated into the
                original fragment. </paragraph>
            <paragraph> In general the response of HI will become the leading answer. However when a
                conflict was found between some of the fields of the fragment, An alternative
                fragment is included into the original fragment. Any fields that were originally
                left blank and were complemented by HI are also enriched in this alternative
                fragment. This will give the end-user the ability to overrule the validation of HI.
                When no conflict is found the alternative fragment will not be generated. For
                name/business validations the alternative section will not be enriched with data
                from HI, instead the original fragment will be constructed so that all information
                is consisted with the validated business name. </paragraph>
            <paragraph> When an alternative fragment is included it will have it's own quality
                element - with a unique datahash, including a message stating that the end-user has
                overruled HI. </paragraph>
            <paragraph> When HI is for some reason unavailable, the validation result will state
                this in the user message. This will allow the business to continue. </paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="esb-ws-endpoint"/>
            <esbRoute id="rfv"/>
            <esbRoute id="esb-validation-facade"/>
        </dependingRoutes>
        <history>
            <changes version="6.4.0.RC2">
                <change jira="DTGESB-3195">Perform loadtest on MCD on local MongoDB</change>
                <change jira="DTGESB-4093">Extend RFV on ssoIdentity in order to support various
                    context types on credentials</change>
                <change jira="DTGESB-4122">As a CRM user I want the address validations to be more
                    robust</change>
                <change jira="DTGESB-4127">Create unit test for concurrent load on RFV
                    trunk</change>
                <change jira="DTGESB-4151">Test finding : Web validation produces inconsistent
                    results under heavy load. (DTGESB-4150)</change>
                <change jira="DTGESB-4186">As a system that interacts with the MCD, I want a more
                    robust RFI to be executed.</change>
            </changes>
            <changes version="6.4.0.RC1">
                <change jira="DTGESB-3999">Enable SSO in MCD</change>
            </changes>
            <changes version="6.3.0">
                <change jira="DTGESB-3565">Std validation Telecom on Full</change>
                <change jira="DTGESB-3867">Test finding : CRM: Address validation is accepting wrong
                    combinations (DTGCONTST-1485)</change>
                <change jira="DTGESB-3868">Test finding : CRM: Premise code in requestForValidation
                    does not change (DTGCONTST-1568)</change>
                <change jira="DTGESB-3899">Migration finding: alternative niet gevuld bij switch van
                    business naar residential</change>
                <change jira="DTGESB-3908">Ensure aid's are generated on the fragments in the
                    RFV</change>
                <change jira="DTGESB-3559">Derive BIC code from IBAN bankaccount in std
                    validation</change>
                <change jira="DTGESB-3781">Incorrect derived types in telecom fragment</change>
                <change jira="DTGESB-3248">As a system I want to store multiple versions of a data
                    (document types) in the database</change>
                <change jira="DTGESB-3584">HI address validation now add house number addition and
                    residence name into one field.</change>
                <change jira="DTGESB-3527">Add account fragment to notification on update
                    messages</change>
            </changes>
            <changes version="&gt;6.2.0">
                <change jira="DTGESB-3459">Placement Hierarchy in original address validation is
                    repeated, if provided in the input message</change>
                <change jira="DTGESB-3457">Problem with NOU message on the CI environment</change>
                <change jira="DTGESB-3404">Ensure NOU messages from RFU are send in a separate
                    route</change>
                <change jira="DTGESB-2842">RFV-std-address validatie aanpassen zodat
                    placementHierarchy gevuld wordt</change>
                <change jira="DTGESB-2839">Implemented new outlet 2.4 in MCD</change>
                <change jira="DTGESB-2857">Implement new std in validation facade</change>
                <change jira="DTGESB-2866">Update std for telephone number</change>
                <change jira="DTGESB-2865">Update std for email</change>
                <change jira="DTGESB-2864">Update std for web</change>
                <change jira="DTGESB-2863">Update std for iban</change>
                <change jira="DTGESB-2862">Update std for name, and address</change>
                <change jira="DTGESB-3247">As a CRM or MBS user I want to treat the business name
                    validation different.</change>
            </changes>
            <changes version="6.1.0">
                <change jira="DTGESB-3127">RFUR contains wrong document version in meta
                    data.</change>
                <change jira="DTGESB-3114">Avoid class cast problem in MCD in case of old
                    data</change>
                <change jira="DTGESB-2937">Increase robustness of in-flight messages for sync
                    routes.</change>
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2324">Implement HI interface</change>
            </changes>
        </history>
        <notes>
            <note date="2014-07-16">This route has no configurable from endpoint, this route accepts
                messages received on the direct-vm:rfvHumanInferenceValidationEndpoint</note>
            <note date="2013-11-08">Since this artifact should not be called directly from any
                artifact other than the esb-validation-facade. The consuming in-endpoint cannot be
                configured.</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="direct-vm" subType="direct-vm">
                <schemas>
                    <schema version="V2.4" type="RFV.xsd" validating="false"
                        >http://schema.detelefoongids.nl/message/v2.4/RFV.xsd</schema>
                    <schema version="V3.0" type="RFV.xsd" validating="false"
                        >http://schema.detelefoongids.nl/message/v3.0/RFV.xsd</schema>
                </schemas>
            </endpoint>
            <endpoint direction="to" archeType="tcp" subType="XML">
                <associatedProperties>
                    <associatedProperty key="hi-validation.url"/>
                    <associatedProperty key="hi-validation.receiveTimeout"/>
                    <associatedProperty key="hi-validation.placementHierarchyUrl"/>
                    <associatedProperty key="hi-validation.trace"/>
                    <associatedProperty key="esb-common.docModelXmlAllowedDocuments"/>
                    <associatedProperty key="esb-common.docModelXsdAllowedDocuments"/>
                    <associatedProperty key="esb-common.docModelXmlAllowedMessages"/>
                    <associatedProperty key="esb-common.docModelXsdAllowedMessages"/>
                    <associatedProperty key="esb-common.docModelXslBasePath"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="true" changed="false" secret="false"
                    key="esb-common.docModelXmlAllowedDocuments"
                    exampleValue="/META-INF/docmodel/xml/allowedDocuments.xml"
                    description="Reference to the allowed document file supported by the MCD. The content of this file lists all document types and the related versions supported by the MCD. When left blank a default file will be loaded that contains the document types that are currently known as supported. When specifying an external resource such as a file or an URL, the protocol should be mentioned as well. e.g. file://$FUSE_HOME/etc/docmodel/allowedDocuments.xml"/>
                <property constant="true" changed="true" secret="false"
                    key="esb-common.docModelXsdAllowedDocuments"
                    exampleValue="http://schema.detelefoongids.nl/esb-config/V2.0/allowedDocuments.xsd"
                    description="The url to the schema definition of the allowed documents as configured by the property docModelXmlAllowedDocuments"/>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.docModelXmlAllowedMessages"
                    exampleValue="/META-INF/docmodel/xml/allowedMessages.xml"
                    description="Reference to the allowed messages file supported by the MCD. The content of this files lists all the requests that are supported by MCD. Example given: RequestForInformation V2.4 with document type outlet. When left blank a default file will be loaded that contains the messages that are currently known as supported. When specifying an external resource such as a file or an URL, the protocol should be mentioned as well. e.g. file://$FUSE_HOME/etc/docmodel/allowedMcdMessages.xml"/>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.docModelXsdAllowedMessages"
                    exampleValue="http://schema.detelefoongids.nl/esb-config/V1.0/allowedMcdMessages.xsd"
                    description="The url to the schema definition of the allowed messages as configured by the property docModelXmlAllowedMessages"/>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.docModelXslBasePath" exampleValue="/META-INF/docmodel/xsl"
                    description="For multi version and multi document support several xslt have been written in order to up- or downgrade a specific document to the required version. When the default xslts are used for this, this property tells where the default xslts are located. When left blank the default value, /META-INF/docmodel/xsl, will be used."/>
                <property constant="true" changed="false" secret="true" key="esb-common.hashSalt"
                    exampleValue="salt"
                    description="In cryptography, a salt is random data that is used as an additional input to a one-way function that hashes a password or passphrase."
                    >********</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.hi.validation.cfg">
                <property constant="false" changed="false" secret="false" key="hi-validation.url"
                    exampleValue="http://ams-hi01-t01:8080/axis2/services/SoapConnector/"
                    description="The URL to Human Inference webservice."
                    >http://ams-hi01-t01:8080/axis2/services/SoapConnector</property>
                <property constant="true" changed="false" secret="false"
                    key="hi-validation.receiveTimeout" exampleValue="20000"
                    description="The time in milliseconds to wait on a response from Human Inference."
                    >20000</property>
                <property constant="false" changed="false" secret="false"
                    key="hi-validation.placementHierarchyUrl"
                    exampleValue="resource://xml/refDbStdAddress.xml"
                    description="Path to the (resource) file that contains the placement hierarchy. You can either use a file url, or a resource url, e.g. file:///var/fuse/refDbStdAddress.xml, resource:///refDbStdAddress.xml. If this property is not specified, the default value is resource://xml/refDbStdAddress.xml"
                    >resource:///xml/refDbStdAddress.xml</property>
                <property constant="true" changed="false" secret="false" key="hi-validation.trace"
                    exampleValue="false"
                    description="When set to true, detailed logging is enabled.">false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="             http://schema.detelefoongids.nl             http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="crm-perfect-dm-router" esbLocation="internal" synchronous="false" version="V1.2">
        <maven groupId="com.dtg.esb.forwarddocument" artifactId="crm-perfect-dm-router"
            version="6.1.0" feature="true" configChanged="false"/>
        <description>
            <paragraph> This route integrates the systems CRM and PerfectDM. CRM sends order
                confirmation documents to customers (also called accounts) via email, or postal
                mail. PerfectDM will actually send these documents to our customers. The CRM
                produces the order confirmation as a PDF document, which it stores in Sharepoint
                from which the document can be retrieved. Consequently, the CRM compose a forward
                document request message, which is picked-up by this route after it has been
                distributed by the main message distributor. The forward document request can
                contain multiple references to documents to be forwarded. </paragraph>
            <paragraph> The route will retrieve the PDF documents from Sharepoint and create a
                manifest CSV file containing information about the retrieved PDFs with additional
                data. In the end one or multiple PDFs will be stored at the specified file location
                and one single manifest CSV file containing information about all PDFs retrieved. </paragraph>
            <paragraph> The role of crm-perfect-dm-router : The route receives a
                forwardDocumentRequest message with optionally multiple references to documents to
                forward. Each forward document is split into a single message. For each forward
                document message the PDF is obtained from Sharepoint and is stored on a specified
                file share. After all documents have been stored the manifest CSV file is created.
                Each record in the CSV file has the following content: </paragraph>
            <paragraph> * 1 - aantal pagina's, (number of pages) </paragraph>
            <paragraph> * 2 - type brief, (type of letter) </paragraph>
            <paragraph> * 3 - naam bedrijf, (company name) </paragraph>
            <paragraph> * 4 - aanhef, (opening) </paragraph>
            <paragraph> * 5 - straatnaam, (street name) </paragraph>
            <paragraph> * 6 - postcode, (postal code) </paragraph>
            <paragraph> * 7 - woonplaats, (city) </paragraph>
            <paragraph> * 8 - huisnummer, (house number) </paragraph>
            <paragraph> * 9 - bijlage type, (addendum type) </paragraph>
            <paragraph> * 10 - huisnummertoevoeging, (house number addendum) </paragraph>
            <paragraph> * 11 - klantnr, (account number) </paragraph>
            <paragraph> * 12 - contractid, (contract id) </paragraph>
            <paragraph> * 13 - e-mail adres (email address) </paragraph>
            <paragraph> * 14 - Document (filename of document, e.g. 1234_5678.pdf) </paragraph>
            <paragraph> Finally the CSV file will also be stored on a specified file share. The file
                name of this manifest file is based on the first document name in the forward
                document request. Where the extension pdf has been replaced with csv. An activeBatch
                script will FTP these files to the FTP server of PerfectDM. </paragraph>
        </description>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
            </changes>
            <changes version="6.1.0.RC1">
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0.RC4">
                <change jira="DTGESB-2661">Make use of new transaction mechanism.</change>
            </changes>
            <changes version="6.0.0.RC3">
                <change jira="DTGESB-2661">Refactor JMS handling to deal with a different pool
                    implementation</change>
            </changes>
            <changes version="6.0.2">
                <change jira="DTGESB-2674">Investigate change directory problem with perfect DM
                    route</change>
                <change jira="DTGESB-2665">Change perfect dm route to use the different pool
                    implementation (using quick fix)</change>
            </changes>
            <changes version="6.0.1">
                <change jira="DTGESB-2630">Adjusted meta-data</change>
                <change jira="DTGCONTST-150">Fixed FTP by using SFTP</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1004">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-11">Als fulfilment employee wil ik een orderbevestiging laten
                    versturen door Perfect DM (pdf en metadata)</change>
            </changes>
        </history>
        <endpoints>
            <endpoint direction="from" archeType="queue" subType="JMS">
                <associatedProperties>
                    <associatedProperty key="esb-common.forwardDocumentQueue"/>
                    <associatedProperty key="esb-common.sharepointCertificate"/>
                    <associatedProperty key="esb-common.sharepointKeyStorePassword"/>
                    <associatedProperty key="esb-common.sharepointKeyManagerPassword"/>
                    <associatedProperty key="esb-common.sharepointAdUserName"/>
                    <associatedProperty key="esb-common.sharepointAdPassword"/>
                    <associatedProperty key="esb-common.sharepointAdDomain"/>
                    <associatedProperty key="esb-common.sharepointHost"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="PDF/CSV" subType="FILE">
                <associatedProperties>
                    <associatedProperty key="forwardDocument.forwardDocumentEndpointType"/>
                    <associatedProperty key="forwardDocument.forwardDocumentHostname"/>
                    <associatedProperty key="forwardDocument.forwardDocumentUsername"/>
                    <associatedProperty key="forwardDocument.forwardDocumentPassword"/>
                    <associatedProperty key="forwardDocument.forwardDocumentPath"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://activeMQ:61616"
                    description="The activeMQ broker used."
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.forwardDocumentQueue"
                    exampleValue="jms:queue:forwardDocumentQueue"
                    description="The queue on which CRM will send forwardDocumentRequests, and from which this route will pick-up the forwardDocumentRequests"
                    >jms:queue:forwardDocumentQueue</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.sharepointCertificate"
                    exampleValue="/var/data/fuse-esb/fuse/etc/certs/sharepoint.jks"
                    description="Contains the  sharepoint security certificate which is needed to conduct SSL communication over the HTTPS protocol. See appendix for more information related to certificates."
                    >/var/lib/jboss/fuse-files/dtg-ci-esbi/6.0.1/keystores/sharepoint.jks</property>
                <property constant="false" changed="false" secret="true"
                    key="esb-common.sharepointKeyStorePassword" exampleValue="secret"
                    description="The password for the key store">********</property>
                <property constant="false" changed="false" secret="true"
                    key="esb-common.sharepointKeyManagerPassword" exampleValue="secret"
                    description="The password for the key manager.">********</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.sharepointAdUserName" exampleValue="SV_ESB_Sharepoint"
                    description="The username for the Sharepoint authentication (which is actually an Active Directory username)."
                    >SV_ESB_Sharepoint</property>
                <property constant="false" changed="false" secret="true"
                    key="esb-common.sharepointAdPassword" exampleValue="VpTXho5Z"
                    description="The password associated with the Sharepoint authentication"
                    >********</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.sharepointAdDomain" exampleValue="DTGLAN"
                    description="The security domain associated with the authentication."
                    >DTGLAN</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.sharepointHost" exampleValue="ams-sharep-02"
                    description="The hostname of the Sharepoint server"
                    >ams-sharep-02.dtglan.local</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.crm.perfectdm.router.cfg">
                <property constant="false" changed="false" secret="false"
                    key="forwardDocument.forwardDocumentEndpointType" exampleValue="ftp"
                    description="This property specificies whether the endpoint’s destination is an ftp server or a location on file server. Only valid options are ftp or file."
                    >file</property>
                <property constant="false" changed="false" secret="false"
                    key="forwardDocument.forwardDocumentHostname" exampleValue="dtgdjbfcrm03"
                    description="This property contains the servername to which the files will be ftp’ed. Optionally including the portnumber in the form servername:port"/>
                <property constant="false" changed="false" secret="false"
                    key="forwardDocument.forwardDocumentUsername" exampleValue="esbdev"
                    description="This property contains the username which is used to connect to the server specified by the property forwardDocument.forwardDocumentHostname."/>
                <property constant="false" changed="false" secret="true"
                    key="forwardDocument.forwardDocumentPassword" exampleValue="secret"
                    description="This property contains the password which is used to connect to the server specified by the property forwardDocument.forwardDocumentHostname."
                    >********</property>
                <property constant="false" changed="false" secret="false"
                    key="forwardDocument.forwardDocumentPath" exampleValue="perfectDM"
                    description="This property contains the directory path in where the files should be stored."
                    >/var/lib/jboss/transport/printhuis/crm-to-pdm/Orderbevestigingen</property>
                <property constant="true" changed="false" secret="false" key="forwardDocument.trace"
                    exampleValue="false" description="When set to true detailed logging is enabled."
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="crm-debtor-to-exact" esbLocation="internal" synchronous="false" version="V1.2">
        <maven configChanged="false" groupId="com.dtg.esb.exact.debtor"
            artifactId="crm-debtor-to-exact" version="6.1.0" feature="true"/>
        <description>
            <paragraph> The purpose of the CRM/Exact route is to allow the CRM to pass debtor data,
                and orders to invoice to exact. The enterprise software bus (ESB) acts as 'the man
                in the middle' forwarding the debtor data, and the order to invoiced handed over by
                the CRM. </paragraph>
        </description>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2709">Make use of new transaction mechanism.</change>
                <change jira="DTGESB-2627">Adjusted meta-data</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-1897">Support commandToBill as a replacement for
                    orderToBeInvoiced</change>
                <change jira="DTGESB-1003">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
                <change jira="DTGESB-3">FCRMTEXA_F1 versie 1: Invoice lines to be invoiced</change>
            </changes>
        </history>
        <endpoints>
            <endpoint direction="from" archeType="queue" subType="JMS">
                <associatedProperties>
                    <associatedProperty key="esb-common.debtorQueue"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="file">
                <associatedProperties>
                    <associatedProperty key="crmExactRouter.tmpDirectoryForStoringDebtorMessages"/>
                    <associatedProperty key="crmExactRouter.aggregationFrequency"/>
                    <associatedProperty key="crmExactRouter.aggregateStoreDebtor"/>
                    <associatedProperty key="crmExactRouter.trace"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://ams-mq-d01:61616"
                    description="The URL of the ActiveMQ broker"
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.debtorQueue" exampleValue="jms:queue:debtorQueue"
                    description="The end endpoint URL of the queue on which debtor messages are delivered to the route."
                    >jms:queue:debtorQueue</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.crm.exact.debtor.cfg">
                <property constant="false" changed="false" secret="false"
                    key="crmExactRouter.aggregationFrequency" exampleValue="cron=0+0/2+*+*+*+?"
                    description="A specification of the schedule policy for the production of the aggregation files."
                    >cron=0 0/1 * * * ?</property>
                <property constant="false" changed="false" secret="false"
                    key="crmExactRouter.aggregateStoreDebtor"
                    exampleValue="/var/esb/fuse-esb/crm/aggregate-store/debtor"
                    description="The specification of the path to the directory in which to deposited a generated debtor aggregate file."
                    >/var/lib/jboss/transport/exact/crm-to-exact/debtor</property>
                <property constant="false" changed="false" secret="false"
                    key="crmExactRouter.tmpDirectoryForStoringDebtorMessages"
                    exampleValue="/var/esb/fuse-esb/crm/msg-store/debtor-messages"
                    description="The path to the directory in which the debtor messages are stored with one debtor message per file."
                    >/var/lib/jboss/transport/exact/crm-to-exact/debtor/temp</property>
                <property constant="true" changed="false" secret="false" key="crmExactRouter.trace"
                    exampleValue="false"
                    description="When set to true, low grained information about the exchange processed by this route, will be logged into the log files. To avoid explosive growth of these log files this property should normally be set to false. When this property is not set, tracing will default to false. Less verbose logging can also be enabled by setting the log level to DEBUG in Karaf."
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="crm-cre-debtor-router" esbLocation="internal" synchronous="false" version="V1.2">
        <maven configChanged="false" groupId="com.dtg.esb.cre" artifactId="crm-cre-debtor-router"
            version="6.1.0" feature="true"/>
        <description>
            <paragraph> This route integrates CRM and CreditManager (CM). CRM posts a series of
                debtor updates XML messages that are of interest to the CM. </paragraph>
            <paragraph> This route transforms each single debtor update XML message into a single
                debtor update CSV record and appends this record to a file that will be processed by
                CM. Once a week CM picks-up the file manually for further processing, if no file
                already exists, because it was already manually picked-up for further processing by
                CM, this route will create the file upon processing the first debtor XML message. </paragraph>
            <paragraph> As said before CM picks-up the file manually in an agreed time frame. When
                the file is manually picked-up the route must NOT hold a lock on the file and also
                NOT add debtor update CSV records to the file. This is managed by the properties
                crmCreDebtor.cronSuspendSchedule and crmCreDebtor.cronResumeSchedule, which will
                stop processing the incoming debtor xml messages at a certain time and restart
                processing these messages after a certain idle period has expired. Within this idle
                period, CM has the opportunity to pick-up the file manually. </paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="esb-ws-endpoint"/>
        </dependingRoutes>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2626">Adjusted meta-data</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1334">Technical release, upgrade of esb-commons
                    version.</change>
                <change jira="DTGESB-1334">Moved property crmCreDebtor.debtorInputQueue to shared
                    configuration file, and renamed it to
                    esb-common.creditManagerDebtorInputQueue.</change>
                <change jira="DTGESB-1334">Moving the route to version FuseESB7.1</change>
            </changes>
            <changes version="1.0.1">
                <change jira="DTGESB-1277">Added required version to quartz component to overcome
                    wiring problem.</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-635">Finalize route upgrade cre-debtor-route and fix
                    incompleteness release documentation.</change>
                <change>Changed configuration file name from com.dtg.esb.cre.crm-cre-debtor.cfg to
                    com.dtg.esb.cre.debtor.cfg</change>
                <change jira="DTGCON-799">Diacritics are now processed correctly.</change>
            </changes>
        </history>
        <notes>
            <note date="2013-03-23">Moving the route to version FuseESB 7.1. Updated the associated
                properties of the end points.</note>
            <note date="2012-11-20">New release due to character encoding of CSV file.</note>
            <note date="2012-11-28">Please note when testing this route from the active MQ console
                via the browser, the browser encoding is set to UTF-8. When sending messages with
                UTF-8 encoding, ensure to that the characters used are really UTF-8 encoded. For
                further references see http://www.csbruce.com/software/utf-8.html</note>
            <note date="2012-11-28">For more information about scheduling this route with quartz you
                can read the following page :
                http://www.quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger </note>
            <note date="2012-11-28">Make sure that the suspend moments in time precede the resumed
                moments.</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="queue" subType="XML">
                <schemas>
                    <schema version="V1.3" type="debtor.xsd" validating="false"
                        >http://schema.detelefoongids.nl/domain/V1.3/debtor.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.creditManagerDebtorInputQueue"/>
                    <associatedProperty key="crmCreDebtor.cronSuspendSchedule"/>
                    <associatedProperty key="crmCreDebtor.cronResumeSchedule"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="file" subType="CSV">
                <associatedProperties>
                    <associatedProperty key="crmCreDebtor.pathToCreditManagerDirectory"/>
                    <associatedProperty key="crmCreDebtor.pathToCsvFileDirectory"/>
                    <associatedProperty key="crmCreDebtor.csvFileCharacterEncoding"/>
                    <associatedProperty key="crmCreDebtor.csvFileName"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://ams-mq-d01:61616"
                    description="The URL of the ActiveMQ broker"
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.creditManagerDebtorInputQueue"
                    exampleValue="jms:queue:creditManagerDebtorQueue"
                    description="The Queue on which the debtor messages to forward should be placed on."
                    >jms:queue:creditManagerDebtorQueue</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.cre.debtor.cfg">
                <property constant="true" changed="false" secret="false"
                    key="crmCreDebtor.csvFileName" exampleValue="stamgegevens.txt"
                    description="The name for the CSV file to which the CSV records are appended. By convention this file name is stamgegevens.txt. This is also the name for the CSV file that the CM expects the CSV file to have."
                    >stam_crm.txt</property>
                <property constant="false" changed="false" secret="false"
                    key="crmCreDebtor.pathToCreditManagerDirectory"
                    exampleValue="/var/esb/fuse-esb/credit-manager/"
                    description="This is the path to the samba mounted folder in which a copy of the CSV file should be placed to make it available for the CM. This together with the crmCreDebtor.csvFileName make up the out endpoint of this route."
                    >/var/lib/jboss/transport/creditmanager/crm-to-cre/Stamgegevens</property>
                <property constant="true" changed="false" secret="false"
                    key="crmCreDebtor.csvFileCharacterEncoding" exampleValue="8859_1"
                    description="This property defines the character encoding for the CSV file CM is expecting an 8859_1 encoded file. Please note the underscore in this property value. When this property is not set, it will default to 8859_1. So, it is not required to actually set this property."
                    >8859_1</property>
                <property constant="false" changed="false" secret="false"
                    key="crmCreDebtor.cronSuspendSchedule" exampleValue="10 */1 * * * ? *"
                    description="A CRONTAB specification that specifies when the route has to be suspended. From this moment the route will be inactive for processing. For more information about scheduling this route with quartz you can read the following page : http://www.quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger. Make sure that the suspend moments in time precede the resumed moments."
                    >10 0 */1 * * ? *</property>
                <property constant="false" changed="false" secret="false"
                    key="crmCreDebtor.cronResumeSchedule" exampleValue="40 */1 * * * ? *"
                    description="A CRONTAB specification that specifies when the route has to be suspended. From this moment the route will be inactive for processing. For more information about scheduling this route with quartz you can read the following page : http://www.quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger."
                    >40 0 */1 * * ? *</property>
                <property constant="true" changed="false" secret="false" key="crmCreDebtor.trace"
                    exampleValue="false"
                    description="When set to true, detailed processing information is logged."
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="esb-website" esbLocation="both" synchronous="true" version="V1.2">
        <!-- Note: changing the below attribute values to ${project.groupId} etc. it will not be translated.-->
        <maven groupId="com.dtg.esb.website" artifactId="esb-website" version="6.1.0.RC1"
            feature="true" configChanged="false"/>
        <description>
            <paragraph>The ESB can generate an overview of all routes, and/or detailed information
                per route in HTML.</paragraph>
        </description>
        <history>
            <!-- Anticipation that all 6.0.0-RC's will collapse into a single version -->
            <changes version="6.1.0">
                <change jira="DTGESB-3372">Finalize esb-website 6.1.0.RC1.</change>
                <change jira="DTGESB-2905">Create release candidate 6.1.0.RC1.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2608">Show route image when present and place xslt on schema
                    server</change>
                <change jira="DTGESB-2363">Update esb-website to be compliant with esb-route.xsd
                    v1.2</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1941">Duplicate name in the blacklist and whitelist debtor
                    status route</change>
                <change jira="DTGESB-1338">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-620">Initial creation of esb-website concept.</change>
                <change jira="DTGESB-748">Finalize esb-route schema.</change>
                <change jira="DTGESB-871">Extended concept now the underlying XSD is
                    finalized.</change>
            </changes>
        </history>
        <notes>
            <note date="2012-10-22">No requirements were available and as result the ESB team
                created an initial version.</note>
            <note date="2012-11-02">Investigation started to fetch more requirements from
                operations, testers and the architect in order to finalize the schema.</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="jetty" subType="HTTP">
                <associatedProperties>
                    <associatedProperty key="esbWebsite.webPort"/>
                    <associatedProperty key="esbWebsite.representRoutesXsl"/>
                    <associatedProperty key="esbWebsite.representRouteDetailXsl"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="jetty" subType="HTTP">
                <schemas>
                    <schema validating="false" version="v1.2" type="esb-route"
                        >http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd</schema>
                </schemas>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="routeConfig" fileReference="com.dtg.esb.website.cfg">
                <property constant="true" changed="false" secret="false" key="esbWebsite.webPort"
                    exampleValue="9090"
                    description="The port used for this artefact. When this artefact is run on the bus located on host someEsbHostname, this website will be accessible on http://someEsbHostname:9090/overview."
                    >9090</property>
                <property constant="true" changed="false" secret="false"
                    key="esbWebsite.representRoutesXsl"
                    exampleValue="http://schema.detelefoongids.nl/translate/esbwebsite/represent-routes.xsl"
                    description="Optional property to overrule the default xslt which generates the routes overview ( = menu ). "
                    >http://schema.detelefoongids.nl/translate/esbwebsite/v1.0/represent-routes.xsl</property>
                <property constant="true" changed="false" secret="false"
                    key="esbWebsite.representRouteDetailXsl"
                    exampleValue="http://schema.detelefoongids.nl/translate/esbwebsite/represent-route-detail.xsl"
                    description="Optional property to overrule the default xslt which generates the detailed route information."
                    >http://schema.detelefoongids.nl/translate/esbwebsite/v1.0/represent-route-detail.xsl</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="matchcraft-sea-merchant-feedback-to-esb-input-queue" esbLocation="internal"
        synchronous="false" version="V1.2">
        <maven configChanged="false" groupId="com.dtg.esb.matchcraft"
            artifactId="matchcraft-sea-merchant-feedback-to-esb-input-queue" version="6.2.0"
            feature="true"/>
        <description>
            <paragraph> User story: As a CRM user I want to receive a status update of any SEA
                product so that I know whether it is published or not, and if not why it is not
                published. </paragraph>
            <paragraph> This route first picks-up a XML merchant feedback file with multiple
                merchants. This file is validated against the allowed Messages file for this route
                and when allowed, it is validated against the merchant-feedback XSD schema, </paragraph>
            <paragraph> when valid the XML file is split into multiple merchant XML messages. Each
                single merchant XML message will be transformed into a CRM XML message format,
                according to statusUpdatePublication schema. </paragraph>
            <paragraph> Finally the status update publication will be sent to the esbInputQueue for
                further distribution. When the complete is processed it is moved to the done folder,
                otherwise it will be moved to the error folder. </paragraph>
        </description>
        <history>
            <changes version="6.2.0">
                <change jira="DTGESB-3534">Improved SEA message handling</change>
            </changes>
            <changes version="6.1.0">
                <change jira="DTGESB-3159">Message type warning will be translated to
                    publicationError.</change>
                <change jira="DTGESB-2905">Create release candidate.</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2623">Adjusted meta-data</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
                <change jira="DTG-2143">Update matchcraft routes to deal with updated SUP (3.0)
                    messages</change>
            </changes>
            <changes version="3.0.0">
                <change jira="DTGESB-1753">Rename the matchcraft-sea-merchant-feedback-to-topic
                    route to matchcraft-sea-merchant-feedback-to-esb-input-queue </change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1332">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="1.0.0">
                <change jira="DTGESB-877">Fix in generating SUP message. When there is no element
                    totalImpressions in the merchant-feedback xml file, do not generate a views
                    element in the SUP message.</change>
                <change jira="DTGESB-726">Change in third party xsd: merchant-feedback.xsd</change>
                <change>File handling changed, as the file now goes from source to work, and
                    afterwards to either done or error.</change>
                <change>Initial implementation of the above described user story</change>
            </changes>
        </history>
        <notes>
            <note date="2012-11-06">New release due to new version of the
                'matchcraft-performance-feedback' schema.</note>
            <note date="2012-11-06">The input file is created by the Satellite environment, which
                will filter out all MBS merchants.</note>
            <note date="2012-11-06">The Matchcraft-performance-feeback.xsd version 2 is known on the
                schema server as V1.1.</note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="file" subType="XML">
                <schemas>
                    <schema version="2" type="matchcraft-sea-merchant-feedback" validating="true"
                        >http://schema.detelefoongids.nl/third-party/matchcraft/V1.1/merchant-feedback.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="matchcraftFeedbackMerchant.pathToSourceDirectory"/>
                    <associatedProperty key="matchcraftFeedbackMerchant.pathToWorkDirectory"/>
                    <associatedProperty key="matchcraftFeedbackMerchant.pollDelay"/>
                    <associatedProperty key="matchcraftFeedbackMerchant.pathToDoneDirectory"/>
                    <associatedProperty key="matchcraftFeedbackMerchant.pathToErrorDirectory"/>
                    <associatedProperty
                        key="matchcraftFeedbackMerchant.validSchemasConfigurationFileLocation"/>
                    <associatedProperty key="matchcraftFeedbackMerchant.pathToAllowedMessagesXsd"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="queue" subType="XML">\ <schemas>
                    <schema version="V3.1" type="SUP" validating="false"
                        >http://schema.detelefoongids.nl/message/V3.1/SUP.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.esbInputQueue"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://localhost:61616"
                    description="ESB broker url">tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.esbInputQueue" exampleValue="jms:queue:esbInputQueue"
                    description="Queue on which all ESB clients posts asynchronous messages."
                    >jms:queue:esbInputQueue</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.matchcraft.merchant.feedback">
                <property constant="false" changed="false" secret="false"
                    key="matchcraftFeedbackMerchant.pollDelay" exampleValue="500"
                    description="This property defines the polling interval in milliseconds (for when to detect new files)"
                    >500</property>
                <property constant="false" changed="false" secret="false"
                    key="matchcraftFeedbackMerchant.pathToSourceDirectory"
                    exampleValue="/tmp/matchcraft/merchant/source"
                    description="This property defines the source directory from where the feedback XML from Matchcraft will be picked up."
                    >/var/lib/jboss/transport/matchcraft/matchcraft-to-crm/merchant/source</property>
                <property constant="false" changed="false" secret="false"
                    key="matchcraftFeedbackMerchant.pathToWorkDirectory"
                    exampleValue="/tmp/matchcraft/merchant/work"
                    description="This property defines the work directory. Any XML file in the source is moved to the work directory first (in order to circumvent file locks)"
                    >/var/lib/jboss/transport/matchcraft/matchcraft-to-crm/merchant/work</property>
                <property constant="false" changed="false" secret="false"
                    key="matchcraftFeedbackMerchant.pathToDoneDirectory"
                    exampleValue="/tmp/matchcraft/merchant/done"
                    description="This property defines the done directory. After the XML is being handled, it is moved from work to done"
                    >/var/lib/jboss/transport/matchcraft/matchcraft-to-crm/merchant/done</property>
                <property constant="false" changed="false" secret="false"
                    key="matchcraftFeedbackMerchant.pathToErrorDirectory"
                    exampleValue="/tmp/matchcraft/merchant/error"
                    description="This property defines the error directory to which the XML file will be sent in case of errors."
                    >/var/lib/jboss/transport/matchcraft/matchcraft-to-crm/merchant/error</property>
                <property constant="false" changed="false" secret="false"
                    key="matchcraftFeedbackMerchant.validSchemasConfigurationFileLocation"
                    exampleValue="etc/validation/matchcraft-1.0.2-allowedMessages.xml"
                    description="This property defines the location to the configuration file defining which schemas are allowed."
                    >/var/lib/jboss/fuse-files/dtg-ci-esbi/6.0.1/validation/d03-matchcraft-1.0.2-allowedMessages.xml</property>
                <property constant="true" changed="false" secret="false"
                    key="matchcraftFeedbackMerchant.pathToAllowedMessagesXsd"
                    exampleValue="http://schema.detelefoongids.nl/esb-config/v1.3/allowedMessages.xsd"
                    description="This property defines the location of the schema associated with the allowedMatchcraftMessages.xml file"
                    >http://schema.detelefoongids.nl/esb-config/v1.3/allowedMessages.xsd</property>
                <property constant="true" changed="false" secret="false"
                    key="matchcraftFeedbackMerchant.trace" exampleValue="false"
                    description="When set to true, low grained information about the exchange processed by this route, will be logged into the log files. To avoid explosive growth of these log files this property should normally be set to false. When this property is not set, tracing will default to false. Less verbose logging can also be enabled by setting the log level to DEBUG in karaf."
                    >false</property>
            </properties>
        </configuration>
        <allowedMessages>http://ams-build01:8081/esbdev/configuration-files/validation/ams-jbf-d03/d03-matchcraft-1.0.2-allowedMessages.xml</allowedMessages>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="crm-async-ws-endpoint" esbLocation="internal" synchronous="false" version="V1.2">
        <maven feature="true" configChanged="false" groupId="com.dtg.esb.crm"
            artifactId="crm-async-ws-endpoint" version="6.1.0"/>
        <description>
            <paragraph>The purpose of the CRM Web Service Endpoint is to obtain authorization to
                communicate to the CRM. </paragraph>
            <paragraph>The CRM WS Endpoint receives all its messages from the CRM input queue
                (crmInputQueue) which is in XML format. Each message is wrapped in an Exchange
                message which has the original message as its payload. The CRM WS Endpoint
                accordingly calls the CRM "Create" Web Service to send the Exchange object to the
                CRM. At the CRM side, the payload is extracted from the Exchange message.
            </paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="esb-ws-endpoint" version="6.1.0"/>
        </dependingRoutes>
        <history>
            <changes version="6.1.0">
                <change jira="DTGESB-3321">Finalize all routes for 12Connect V2.0</change>
            </changes>
            <changes version="6.1.0.RC1">
                <change jira="DTGESB-2905">Create release candidate.</change>
                <change jira="DTGESB-2836">Using a different JMS shutdown mechanism</change>
            </changes>
            <changes version="6.0.0.RC3">
                <change jira="DTGESB-2661">Refactor JMS handling to deal with a different pool
                    implementation</change>
            </changes>
            <changes version="6.0.0-RC2">
                <change jira="DTGESB-2653">Refactor crm-async-endpoint to exclude ADFS. (Removed the
                    STS security (adfs) and the HTTPS.) </change>
            </changes>
            <changes version="6.0.0-RC1">
                <change>Changed the route in a sync and a-sync route.</change>
                <change jira="DTGESB-2060">As a non CRM user I want to read data from CRM according
                    account, contact or installBase (RFI) </change>
                <change jira="DTGESB-2061">As a non CRM user I want to create/update data into CRM
                    for accoording account, contact or installBase (RFU) </change>
                <change jira="DTGESB-2631">Adjusted meta-data</change>
            </changes>
        </history>
        <notes>
            <note date="2013-10-22">(IMPORTANT) Properties removed as of 6.0.0-RC2</note>
            <note date="2013-10-22">crmEndpoint.activeDirectoryUsername</note>
            <note date="2013-10-22">crmEndpoint.activeDirectoryPassword</note>
            <note date="2013-10-22">crmEndpoint.keyStorePassword</note>
            <note date="2013-10-22">crmEndpoint.keyStorePath</note>
            <note date="2013-10-22">crmEndpoint.stsWsdl</note>
            <note/>
            <note date="2013-10-10">This route will shutdown when the message could not be delivered
                to the webservice. Therefor the status of this route should be monitored closely.
            </note>
        </notes>
        <endpoints>
            <endpoint direction="from" archeType="jms" subType="XML">
                <associatedProperties>
                    <associatedProperty key="esb-common.crmInputQueue"/>
                    <associatedProperty key="esb-common.esbBrokerUrl"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="webservice" subType="CXF">
                <associatedProperties>
                    <associatedProperty key="crmEndpoint.address"/>
                    <associatedProperty key="crmEndpoint.receiveTimeOut"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="true" changed="false" secret="false"
                    key="esb-common.crmInputQueue" exampleValue="jms:queue:crmInputQueue"
                    description="The queue which is the input for the messages to CRM"
                    >jms:queue:crmInputQueue</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://ams-mq-d01:61616"
                    description="The URL of the (Active)MQ broker"
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.crm.endpoint.cfg">
                <property constant="false" changed="false" secret="false" key="crmEndpoint.address"
                    exampleValue="http://192.168.168.32:8510/OrganizationService.svc"
                    description="The endpoint of the organization server"
                    >http://192.168.168.32:8510/OrganizationService.svc</property>
                <property constant="false" changed="false" secret="false"
                    key="crmEndpoint.receiveTimeOut" exampleValue="300000"
                    description="The time out to the organization service. This is high due to performance issues"
                    >30000</property>
                <property constant="true" changed="false" secret="false" key="crmEndpoint.trace"
                    exampleValue="false"
                    description="Add this parameter to get additional information in the log-file"
                    >false</property>
            </properties>
        </configuration>
    </route>
    <route xmlns="http://schema.detelefoongids.nl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="     http://schema.detelefoongids.nl     http://schema.detelefoongids.nl/esb-config/v1.2/esb-route.xsd"
        id="composer-producer-ctf" esbLocation="internal" synchronous="false" version="V1.2">
        <maven configChanged="false" groupId="com.dtg.esb.composer"
            artifactId="composer-producer-ctf" version="6.2.0" feature="true"/>
        <description>
            <paragraph> When an order in CRM is fulfilled and the exposures within this order are
                ready to be published, the CRM system issues among other messages, a CTP, and a CTF
                message containing an installBase element </paragraph>
            <paragraph> If the installBase embedded in the CTP contains one or more outlet ids, it
                will fetch the data of the outlets from the Master Content Database (MCD) identified
                by the ids present in the installBase.. Consequently, a composition message is
                created that consists of the original installBase and the fetched outlets. If no
                outletId was present in the installBase, a composition with only the InstallBase is
                created. </paragraph>
            <paragraph>This route picks up CTF messages from the CTF installbase queue, queries the
                MCD for the outlet of the customer in question, creates a composition of the
                installBase embedded in the original message and the outlet, and posts the
                composition back to the esb webservice endpoint, where it will be routed to the
                appropriate queues.</paragraph>
        </description>
        <dependingRoutes>
            <esbRoute id="esb-ws-endpoint"/>
            <esbRoute id="util-ws-endpoint"/>
        </dependingRoutes>
        <history>
            <changes version="6.2.0">
                <change jira="DTGESB-3768">Finalize version</change>
            </changes>
            <changes version="6.2.0.RC1">
                <change jira="DTGESB-2938">new versions of CTP and CTF message.</change>
                <change>This release is related to the Cairo release.</change>
            </changes>
            <changes version="6.1.0.RC1">
                <change jira="DTGESB-2905">Create release candidate.</change>
                <change jira="DTGESB-2590">Use esb-common.mcdRfiEndpoint property instead of
                    esb-common.mcdRfiEndpoint</change>
            </changes>
            <changes version="6.0.0">
                <change jira="DTGESB-2618">Adjusted meta-data</change>
                <change jira="DTGESB-2114">Upgraded to Fuse 6.0</change>
            </changes>
            <changes version="2.0.0">
                <change jira="DTGESB-1956">As CRM user I want to publish my SEA products (repair
                    composer)</change>
                <change jira="DTGESB-1731">As an OPS I don't want to have unnecessary routes, and
                    want to see the topics and mini routes gone.</change>
                <change jira="DTGESB-1635"> The esb-webservice-endpoint does not add the header
                    'type' to the message for further distribution. Note: The changes related to
                    this task also influence the composer-producer indirectly </change>
                <change jira="DTGESB-1326">Upgrade route to AbstractRouteBuilder and Camel
                    2.10.0</change>
            </changes>
            <changes version="1.2.0-RC1">
                <change jira="DTGESB-1194">Make composer producer CTF route transactional.</change>
                <change jira="DTGESB-1191">Adjust main message distributor to send CTF and CTP
                    installBase messages to their separate queues.</change>
                <change jira="DTGESB-1193">Composer Producer CTF should read from the CTF input
                    queue.</change>
            </changes>
            <changes version="1.1.0-RC1">
                <change jira="DTGESB-756">The RFI request will now use version 2.1 in order to make
                    use of outlet.xsd V2.1. </change>
            </changes>
            <changes version="1.0.0-RC5">
                <change jira="DTGESB-632">Do not call the MCD anymore, when there is no outlet
                    information in the installbase message.</change>
            </changes>
            <changes version="1.0.0-RC1">
                <change>Initial version</change>
            </changes>
        </history>
        <endpoints>
            <endpoint direction="from" archeType="queue" subType="XML">
                <schemas>
                    <schema version="V3.2" type="CTF" validating="true"
                        >http://schema.detelefoongids.nl/message/V3.2/CTF.xsd</schema>
                    <schema version="V2.4" type="RFI" validating="false"
                        >http://schema.detelefoongids.nl/message/V2.4/RFI.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.ctfInstallBaseQueue"/>
                    <associatedProperty key="esb-common.mcdRfiEndpoint"/>
                </associatedProperties>
            </endpoint>
            <endpoint direction="to" archeType="queue" subType="XML">
                <schemas>
                    <schema version="V3.2" type="CTF" validating="true"
                        >http://schema.detelefoongids.nl/message/V3.2/CTF.xsd</schema>
                    <schema version="V2.4" type="RFIR" validating="false"
                        >http://schema.detelefoongids.nl/response/V2.4/RFIR.xsd</schema>
                </schemas>
                <associatedProperties>
                    <associatedProperty key="esb-common.esbInputQueue"/>
                </associatedProperties>
            </endpoint>
        </endpoints>
        <configuration>
            <properties id="sharedConfig" fileReference="com.dtg.esb.shared.cfg">
                <property constant="false" changed="false" secret="false"
                    key="esb-common.esbBrokerUrl" exampleValue="tcp://ams-mq-d01:61616"
                    description="The URL of the ActiveMQ broker"
                    >tcp://dtgdamqcrm01.dtglan.local:61616</property>
                <property constant="true" changed="false" secret="false" key="esb-common.deadLetter"
                    exampleValue="jms:queue:esbDeadLetterQueue"
                    description="his property defines the default deadLetter queue"
                    >jms:queue:esbDeadLetterQueue</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.ctfInstallBaseQueue"
                    exampleValue="jms:queue:ctfInstallBaseQueue"
                    description="The startpoint URL of the queue which the route use as its starting endpoint"
                    >jms:queue:ctfInstallBaseQueue</property>
                <property constant="false" changed="false" secret="false"
                    key="esb-common.mcdRfiEndpoint" exampleValue="netty:tcp://dtgdmcdcrm03:9999"
                    description="The endpoint URL specifying the machine, and port on which the fuse-mcd/rfi listens. The reader is referred to other parts of this document to understand what the value of this property should be."
                    >netty:tcp://dtgdmcdcrm01.dtglan.local:9997</property>
                <property constant="true" changed="false" secret="false"
                    key="esb-common.esbInputQueue" exampleValue="jms:queue:esbInputQueue"
                    description="The end endpoint URL of the queue which the route use as its delivery endpoint. The esb-ws-endpoint will consume these messages and route them based on the content of the message."
                    >jms:queue:esbInputQueue</property>
            </properties>
            <properties id="routeConfig" fileReference="com.dtg.esb.composer.producer.ctf.cfg">
                <property constant="true" changed="false" secret="false"
                    key="composerProducerCtf.trace" exampleValue="false"
                    description="When set to true, low grained information about the exchange processed by this route, will be logged into the log files. To avoid explosive growth of these log files this property should normally be set to false. When this property is not set, tracing will default to false. Less verbose logging can also be enabled by setting the log level to DEBUG in Karaf."
                    >false</property>
            </properties>
        </configuration>
    </route>
</routes>
